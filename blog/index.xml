<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ServiceNow Blog on CodeCreative | A ServiceNow Blog</title>
    <link>https://codecreative.io/blog/</link>
    <description>Recent content in ServiceNow Blog on CodeCreative | A ServiceNow Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 11 Feb 2019 09:48:29 +0000</lastBuildDate>
    
	<atom:link href="https://codecreative.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ServiceNow Salary Survey - Nelson Frank</title>
      <link>https://codecreative.io/blog/servicenow-salary-survey-nelson-frank/</link>
      <pubDate>Mon, 11 Feb 2019 09:48:29 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/servicenow-salary-survey-nelson-frank/</guid>
      <description>This week I am excited to bring back Michael Green to discuss Nelson Frank&amp;rsquo;s first market trends and salary survey report. Whenever I talk to Michael or his team I end up discussing market trends, which locations are hot for ServiceNow, and how salaries are trending. I love sharing insights with the team at Nelson Frank, especially since most online tools have a hard time differentiating between the general IT market and the ServiceNow niche.</description>
    </item>
    
    <item>
      <title>Goodbye Mac, Hello Surface Book 2</title>
      <link>https://codecreative.io/blog/goodbye-mac-hello-surface-book-2/</link>
      <pubDate>Wed, 23 Jan 2019 07:20:12 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/goodbye-mac-hello-surface-book-2/</guid>
      <description>One month ago, I switched from a MacBook Pro with Touchbar to Surface Book 2. Short of a miracle, I won&amp;rsquo;t likely be going back any time soon.
Why switch? My wife and I have owned Apple devices exclusively since 2012 when she got her first MacBook Pro. Since then, we&amp;rsquo;ve at some point owned pretty much everything: MacBook Air, the new MacBook, MacBook Pro, MacBook Pro with Touchbar, 27&amp;rdquo; iMac, iPads, iPad Pros, iPhones, and heck even our router is the Airport Extreme.</description>
    </item>
    
    <item>
      <title>React Component in Service Portal</title>
      <link>https://codecreative.io/blog/react-component-in-service-portal/</link>
      <pubDate>Tue, 22 Jan 2019 14:16:59 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/react-component-in-service-portal/</guid>
      <description>So once again I am hearing rumors that React may be coming to Service Portal. I know many folks who were upset with the use of AngularJS in Service Portal and even with the general lack of modern frameworks built into ServiceNow. But what if the future was now (thanks to science)?
Well, today I spent some time at lunch exploring that possibility and it turns out React may have been able to work within Service Portal just fine all along.</description>
    </item>
    
    <item>
      <title>What&#39;s In Store For 2019</title>
      <link>https://codecreative.io/blog/whats-in-store-for-2019/</link>
      <pubDate>Fri, 18 Jan 2019 11:30:11 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/whats-in-store-for-2019/</guid>
      <description>This year has already kicked off strong and there is a lot that is in the works! Here&amp;rsquo;s a few things you can expect and a few things I am considering on CodeCreative in 2019.
Hugo, We Go! The first big change of 2019 for CodeCreative was a migration from SquareSpace to a Hugo static site. SquareSpace is great if you use their themes but unfortunately I used a custom theme for CodeCreative.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Revealing Module Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-revealing-module-pattern/</link>
      <pubDate>Thu, 17 Jan 2019 19:40:38 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-revealing-module-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The Revealing Module pattern can easily imitate either the Class Pattern or the Namespace Pattern with the added advantage of private state and private functions. This is most helpful in Scoped Applications where the app developer may prefer to keep implementation details hidden while exposing clear public interfaces. But it can also be used to help maintain clear API boundaries over time where traditional Javascript classes and objects would tend towards bloat.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Global Include Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-global-include-pattern/</link>
      <pubDate>Tue, 15 Jan 2019 19:23:43 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-global-include-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The Global Include pattern is simply a way of running a script file held in a Script Include. It is an odd, powerful, and potentially dangerous tool that allows for many different purposes from leveraging external javascript libraries to importing a collection of functions into the global scope, to monkey patching.
One of the most useful purposes is monkey patching which allows us to modify behaviors of existing Script Includes and even ServiceNow provided classes.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Namespace Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-namespace-pattern/</link>
      <pubDate>Tue, 15 Jan 2019 18:51:14 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-namespace-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The namespace pattern provides a simple mechanism for organizing reusable functions and objects. One of the challenging aspects of using alternative Script Include patterns is that they become harder to identify when used. For example, if I use the Function Pattern in a Business Rule it may be challenging for other developers to quickly identify that getMyTeamMembers() refers to a Script Include instead of a function defined in the script or a Global Business Rule.</description>
    </item>
    
    <item>
      <title>How to land your first ServiceNow role</title>
      <link>https://codecreative.io/blog/how-to-land-your-first-servicenow-role/</link>
      <pubDate>Tue, 11 Sep 2018 13:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-land-your-first-servicenow-role/</guid>
      <description>Breaking into a new sector or area of IT is never easy, but with so many opportunities available in ServiceNow perhaps it’s time you made a change. ServiceNow is the fastest-growing IT platform in the marketplace, with Gartner projecting its market share at double that of its nearest competitor in its latest research. Forbes also recently announced it as the world’s most innovative company. So if you’re looking for extra advice to kickstart your ServiceNow journey, here are some handy pointers to help you land your first role.</description>
    </item>
    
    <item>
      <title>Building Apps on ServiceNow: The App Publishers Checklist</title>
      <link>https://codecreative.io/blog/building-apps-on-servicenow-the-app-publishers-checklist/</link>
      <pubDate>Mon, 21 May 2018 17:13:08 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/building-apps-on-servicenow-the-app-publishers-checklist/</guid>
      <description>The following is a summary of the Building Apps on ServiceNow: The App Publishers Checklist session that I presented at Knowledge 18.
 Problem (Slide 2) The Hardest Mistakes to Overcome
During my time on the ServiceNow platform, I have had many opportunities to build a wide variety of applications. Some of my apps ended up on the ServiceNow Store like Intelligent Queue while others have been silent contributions to client applications.</description>
    </item>
    
    <item>
      <title>Making Service Portal Widgets Work Together</title>
      <link>https://codecreative.io/blog/making-service-portal-widgets-work-together/</link>
      <pubDate>Mon, 21 May 2018 17:12:38 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/making-service-portal-widgets-work-together/</guid>
      <description>The following is a summary of the Making Service Portal Widgets Work Together session that I presented at Knowledge 18.
 Problem (Slide 2) Widgets don&amp;rsquo;t play well with others
If you work with Service Portal widgets long enough, you will come across situations where you want to share data between multiple widgets. And inevitably, you will discover that sharing is not something that widgets are very good at.</description>
    </item>
    
    <item>
      <title>Fixing Scoped Apps: A Different Take</title>
      <link>https://codecreative.io/blog/fixing-scoped-apps-a-different-take/</link>
      <pubDate>Mon, 30 Apr 2018 00:46:19 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/fixing-scoped-apps-a-different-take/</guid>
      <description>Introduction &amp;ldquo;This record is in the Customer Service Application, but Global is the current application. To edit this record click here.&amp;rdquo; It&amp;rsquo;s the &amp;ldquo;your princess is in another castle&amp;rdquo; of ServiceNow application development and the target of much ire among developers and admins alike (myself included). The fact is, Cross-Scope development is not as great as it could be and one of Tim Woodruff&amp;rsquo;s latest articles inspired by this little pain point really got my wheels spinning on this issue.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Function Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-function-pattern/</link>
      <pubDate>Fri, 15 Sep 2017 15:30:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-function-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The function pattern is the simplest but also the most flexible interface design pattern for Script Includes. It is the foundation for the Revealing Module Pattern and can be used as a constructor or factory function for any of the other interface types. As a factory function, this pattern can provide a Scoped App with a flexible internal API that can easily evolve as complexity increases.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Class Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-class-pattern/</link>
      <pubDate>Thu, 07 Sep 2017 15:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-class-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The first interface design pattern for Script Includes that we will take a closer look at is the Class Pattern. The primary use case for this interface pattern is to leverage inheritance&amp;hellip; or more properly prototypal inheritance. Prototypal inheritance will allow a Script Include to inherit behaviors from another. One example of this is Script Includes that inherit from AbstractAjaxProcessor to create Glide Ajax scripts but let&amp;rsquo;s look at a custom application example.</description>
    </item>
    
    <item>
      <title>Lodash style interface for GlideRecord</title>
      <link>https://codecreative.io/blog/lodash-style-interface-for-gliderecord/</link>
      <pubDate>Wed, 16 Aug 2017 19:56:57 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/lodash-style-interface-for-gliderecord/</guid>
      <description>Wow, I really left things hanging after the Interface Design Patterns post. The good news is that MapAnything&amp;rsquo;s next release will be amazing! And of course, I will circle back to interface design patterns. But for today, I want to take a look at the start of a library that has been a long time coming.
I love the lodash library. It&amp;rsquo;s great for working with arrays in a simplified manner.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns for Script Includes</title>
      <link>https://codecreative.io/blog/interface-design-patterns-for-script-includes/</link>
      <pubDate>Thu, 01 Jun 2017 02:51:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-for-script-includes/</guid>
      <description>Almost two thirds of the customer service agents used the default browser, never questioning whether a better one was available  The Originals by Adam Grant (2016)   It should go on record that I, sometimes irrationally and against my better judgement, question all conventions, policies, and established ways of doing things. In fact, when I read the above from The Originals a couple months ago, I responded by underlining the quote and hastily scribbling around the passage &amp;ldquo;Arg!</description>
    </item>
    
    <item>
      <title>Making the HighChart Widget Reusable</title>
      <link>https://codecreative.io/blog/making-the-highchart-widget-reusable/</link>
      <pubDate>Wed, 24 May 2017 15:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/making-the-highchart-widget-reusable/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal Configuring HighCharts in Service Portal Generate HighChart Data in a Widget Server Script Making the HighChart Widget Reusable (This Post)  Download the Widget
Up until now, the HighChart Widget that we&amp;rsquo;ve been working on has remained&amp;hellip; well&amp;hellip; mostly unusable.</description>
    </item>
    
    <item>
      <title>Generate HighChart Data in a Widget Server Script</title>
      <link>https://codecreative.io/blog/generate-highchart-data-in-a-widget-server-script/</link>
      <pubDate>Wed, 17 May 2017 14:30:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/generate-highchart-data-in-a-widget-server-script/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal Configuring HighCharts in Service Portal Generate HighChart Data in a Widget Server Script (This Post) Making the HighChart Widget Reusable  Download the Widget
Up until now, we&amp;rsquo;ve only dealt with custom charts using HighCharts with hardcoded data.</description>
    </item>
    
    <item>
      <title>Configuring HighCharts in Service Portal</title>
      <link>https://codecreative.io/blog/configuring-highcharts-in-service-portal/</link>
      <pubDate>Wed, 10 May 2017 21:37:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/configuring-highcharts-in-service-portal/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal Configuring HighCharts in Service Portal (This Post) Generate HighChart Data in a Widget Server Script Making the HighChart Widget Reusable  Download the Widget
One of the greatest points of confusion from some of my previous articles on HighCharts stems from a lack of understanding of the HighCharts API and in particular the HighCharts configuration options object.</description>
    </item>
    
    <item>
      <title>Intro to HighCharts in Service Portal</title>
      <link>https://codecreative.io/blog/intro-to-highcharts-in-service-portal/</link>
      <pubDate>Wed, 03 May 2017 11:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/intro-to-highcharts-in-service-portal/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal (This Post) Configuring HighCharts in Service Portal Generate HighChart Data in a Widget Server Script Making the HighChart Widget Reusable  Download the Widget
About 2 years ago, I demonstrated how to build custom charts using HighCharts with a UI Page and kicked off what would eventually become Code Creative.</description>
    </item>
    
    <item>
      <title>Eliminate Unnecessary Queries With This Simple Check</title>
      <link>https://codecreative.io/blog/eliminate-unnecessary-queries-with-this-simple-check/</link>
      <pubDate>Wed, 26 Apr 2017 23:51:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/eliminate-unnecessary-queries-with-this-simple-check/</guid>
      <description>When I first write a script include to manipulate a GlideRecord, I usually script it to accept a sys_id or other query criteria as a parameter. Its the obvious first step, the GlideRecord has to be retrieved to manipulate it after all. Take this guy for example:
var Test = Class.create(); Test.prototype = { initialize: function() { }, doSomethingAwesome: function(id) { var gr = new GlideRecord(&amp;#39;incident&amp;#39;); if (gr.get()) { // Something awesome gets done here  } }, type: &amp;#39;Test&amp;#39; };  The more I use the script, though, the more likely I am to run into a scenario where I already have the GlideRecord queried from another script.</description>
    </item>
    
    <item>
      <title>Let&#39;s Grab a Drink at Knowledge 17</title>
      <link>https://codecreative.io/blog/lets-grab-a-drink-at-knowledge-17/</link>
      <pubDate>Fri, 14 Apr 2017 16:35:02 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/lets-grab-a-drink-at-knowledge-17/</guid>
      <description>Whether you want to ask me a question in person, discuss Service Portal and custom applications, learn more about my work at MapAnything, discuss a business opportunity, or just chat and enjoy some pleasant company let me know. It&amp;rsquo;s better than hoping we haphazardly stumble on one another. If you&amp;rsquo;re interested, fill out the form below so I can work out a time to meet with you.
Also don&amp;rsquo;t forget to swing by the MapAnything booth!</description>
    </item>
    
    <item>
      <title>A Layman&#39;s Guide to Nested GlideRecords</title>
      <link>https://codecreative.io/blog/a-laymans-guide-to-nested-gliderecords/</link>
      <pubDate>Thu, 13 Apr 2017 15:30:01 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/a-laymans-guide-to-nested-gliderecords/</guid>
      <description>My previous articles on the Nested GlideRecord issue were far more technical than I usually try to achieve. After all, if I can&amp;rsquo;t explain it simply enough then I probably don&amp;rsquo;t understand it well myself. With that in mind, I would like to revisit Nested GlideRecords, how they cause performance problems, and why database indexing alone isn&amp;rsquo;t the best solution&amp;hellip; this time with a little more simplicity.
And a parable!</description>
    </item>
    
    <item>
      <title>Avoid the Style Tag in Service Portal Widgets</title>
      <link>https://codecreative.io/blog/avoid-the-style-tag-in-service-portal-widgets/</link>
      <pubDate>Wed, 12 Apr 2017 14:41:36 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/avoid-the-style-tag-in-service-portal-widgets/</guid>
      <description>Warning: This article is an example of what not to do. Avoid using these practices in your ServiceNow instance.
Previously, we built a widget with configurable CSS styles and I briefly mentioned that using the &amp;lt;style&amp;gt; tag wasn&amp;rsquo;t a great idea. I want to revisit that thought and explore some of the problems that you might encounter when using the &amp;lt;style&amp;gt; tag in a Service Portal Widget. I will use the colored square widget again to demonstrate.</description>
    </item>
    
    <item>
      <title>Intro to Configurable Styles for Service Portal Widgets</title>
      <link>https://codecreative.io/blog/intro-to-configurable-styles-for-service-portal-widgets/</link>
      <pubDate>Fri, 07 Apr 2017 13:08:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/intro-to-configurable-styles-for-service-portal-widgets/</guid>
      <description>Note: This article assumes a basic working knowledge of Service Portal Designer, Service Portal Widget development, and the Widget Editor.
In my Service Portal CSS Best Practices post, I mentioned that as widget developers we should avoid hardcoding colors and use CSS variables to allow overriding default styles. Sometimes we want to take this idea to the next level by allowing portal admins to configure the look and feel of widgets without touching code at all.</description>
    </item>
    
    <item>
      <title>6 Best Practices for Service Portal CSS</title>
      <link>https://codecreative.io/blog/6-best-practices-for-service-portal-css/</link>
      <pubDate>Wed, 22 Mar 2017 17:30:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/6-best-practices-for-service-portal-css/</guid>
      <description>When developing Service Portal styles for either the Theme or the Widgets, there is more to think about than there used to be in CMS. Service Portal offers greater modularity to protect our Widgets from our Themes and vice versa. Below are 6 best practices (they&amp;rsquo;re more what you&amp;rsquo;d call guidelines than actual rules) to follow when coding the CSS for your Service Portal to keep your CSS maintainable and flexible.</description>
    </item>
    
    <item>
      <title>GlideRecord Full Text Search Explained</title>
      <link>https://codecreative.io/blog/gliderecord-full-text-search-explained/</link>
      <pubDate>Tue, 14 Mar 2017 21:36:29 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/gliderecord-full-text-search-explained/</guid>
      <description>After posting last week&amp;rsquo;s GlideRecord Full Text Search article using 123TEXTQUERY321, Jeff Pierce reached out and reminded me of a better way of doing it using IR_AND_OR_QUERY. So special thanks to him for helping to clear this up!
I have since updated my previous article to this approach but I wanted to take a moment to dive into the multiple methods of Full Text Search and their differences.
IR_AND_QUERY   IR_AND_QUERY Results   Behind the scenes, the method previously demonstrated (123TEXTQUERY321) behaves in the same way as using IR_AND_QUERY.</description>
    </item>
    
    <item>
      <title>How To Do Full Text Search With GlideRecord</title>
      <link>https://codecreative.io/blog/how-to-do-full-text-search-with-gliderecord/</link>
      <pubDate>Wed, 08 Mar 2017 20:53:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-do-full-text-search-with-gliderecord/</guid>
      <description>UPDATE: After posting this article, Jeff Pierce reminded me of a better way than the original 123TEXTQUERY321 approach. I have since updated the scripts and article here and provided a deeper explanation in another article.
When looking at the form filters in ServiceNow, I think all admins and developers reach a point where we start to wonder &amp;ldquo;How do I search Keywords in my scripts?&amp;rdquo; After all, that full text search using &amp;ldquo;for text&amp;rdquo; or the &amp;ldquo;Keywords&amp;rdquo; filter is so tantalizing for any custom CMS / Service Portal search feature.</description>
    </item>
    
    <item>
      <title>GlideAjax Troubleshooting Guide</title>
      <link>https://codecreative.io/blog/glideajax-troubleshooting-guide/</link>
      <pubDate>Thu, 02 Mar 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/glideajax-troubleshooting-guide/</guid>
      <description>After my Demystifying GlideAjax infographic I always meant to go back and write a GlideAjax troubleshooting guide. Both troubleshooting my own scripts and helping folks on the ServiceNow Community, I run into the same mistakes over and over and over again. And in spite of making the same mistakes, and eventually stumbling across the same solutions, I&amp;rsquo;ve (shamefully) never quite refined my troubleshooting process on this one. I&amp;rsquo;m pretty sure if I forget sysparm_name in my Client Script again, ServiceNow is going to send people to my door to reclaim my ServiceNow certificates until I go through remediation training.</description>
    </item>
    
    <item>
      <title>3 Ways CSS Widget Scopes Affect Service Portal CSS</title>
      <link>https://codecreative.io/blog/3-ways-css-widget-scopes-affect-service-portal-css/</link>
      <pubDate>Wed, 22 Feb 2017 18:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/3-ways-css-widget-scopes-affect-service-portal-css/</guid>
      <description>Previously, we looked at CSS Widget Scopes in Service Portal. This change in how CSS is applied in Service Portal has a few implications for developers that we need to keep in mind when developing widgets and themes.
1. Widget styles are protected from other widget styles This one should go without saying from the previous article but a widget&amp;rsquo;s CSS will only affect widget instances of that type. Each widget has its own prefixed CSS identifier which appears to be the letter &amp;ldquo;v&amp;rdquo; followed by the sys_id of the widget record, in case you are wondering.</description>
    </item>
    
    <item>
      <title>What are CSS Widget Scopes in Service Portal?</title>
      <link>https://codecreative.io/blog/what-are-css-widget-scopes-in-service-portal/</link>
      <pubDate>Wed, 15 Feb 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/what-are-css-widget-scopes-in-service-portal/</guid>
      <description>Scoped CSS Screenshot from CanIUse.com   Service Portal as a Content Management System has introduced something that now seems like an obvious oversight in all other CMS applications. In fact, its such a obvious, painful oversight that countless others have attempted some sort of solution. CSS Preprocessors, the HTML5 spec, and the recent CSS and JS specs all introduced scoped concepts such as a scoped attribute, scope pseudo selector, and scoping capability with Shadow DOM most of which was promptly ignored by browsers and removed from spec.</description>
    </item>
    
    <item>
      <title>Istanbul CMS iFrames Are Missing Theme CSS</title>
      <link>https://codecreative.io/blog/istanbul-cms-iframes-are-missing-theme-css/</link>
      <pubDate>Thu, 09 Feb 2017 01:08:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/istanbul-cms-iframes-are-missing-theme-css/</guid>
      <description>UPDATE (04/09/2017): This issue appears to be fixed in Istanbul Patch 3
If your organization is using CMS and you are considering upgrading to Istanbul, be on the lookout for a potential issue. Theme CSS styles may not be applied to iFrame content in the CMS for some instances after upgrading to Istanbul. ServiceNow is already looking into the issue so hopefully we will have a resolution soon but I know of a few instances out there that might find this to be a deal breaker for an upgrade so I thought it best to advise the Community.</description>
    </item>
    
    <item>
      <title>Flexbox Layouts in Service Portal (Video)</title>
      <link>https://codecreative.io/blog/flexbox-layouts-in-service-portal/</link>
      <pubDate>Wed, 08 Feb 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/flexbox-layouts-in-service-portal/</guid>
      <description>One of the lesser known features of Service Portal is that you can entirely ditch the Bootstrap grid layout. Technically, this opens up the ability to use Flexbox based layouts. But as some in the Community have found out first hand, using Flexbox as a Bootstrap alternative in Service Portal is not quite as straightforward as it seems.
Most of the &amp;ldquo;problem&amp;rdquo; rests in Flexbox&amp;rsquo;s simplicity. Using only a simple containing div around a set of item divs, Flexbox can achieve many layouts via CSS.</description>
    </item>
    
    <item>
      <title>3 Strategies To Fix Nested GlideRecords</title>
      <link>https://codecreative.io/blog/3-strategies-to-fix-nested-gliderecords/</link>
      <pubDate>Wed, 01 Feb 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/3-strategies-to-fix-nested-gliderecords/</guid>
      <description>Previously, I talked about Nested GlideRecords in scripts and the performance impact they can have on your applications. Being able to identify these miscreants is great but we really need to get them out of any mission critical scripts where they are slowing down response times. Here are a couple strategies to kick those GlideRecords out of the nest and to teach them to fly.
1. Array Flattened GlideRecord Normally, in a Nested GlideRecord, you run a GlideRecord query for each record in the result of the first GlideRecord.</description>
    </item>
    
    <item>
      <title>4 Things to Do Before Building a Service Portal</title>
      <link>https://codecreative.io/blog/4-things-to-do-before-building-a-service-portal/</link>
      <pubDate>Wed, 25 Jan 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/4-things-to-do-before-building-a-service-portal/</guid>
      <description>But at the end of the day, if you have a form with 100 fields that are all mandatory to be filled out before a Catalog Item can be submitted, that’s not a [Service Portal] issue.  Matt Metten   This. Read that. All of that. YES! (&amp;ldquo;I love quick time harch.&amp;rdquo;) I read that, I clicked endorse, then I wrote this. So go read that.
I have spent quite a bit of my time evangelizing Service Portal as well.</description>
    </item>
    
    <item>
      <title>Nested GlideRecords Are Killing Your App Performance</title>
      <link>https://codecreative.io/blog/nested-gliderecords-are-killing-your-app-performance/</link>
      <pubDate>Wed, 18 Jan 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/nested-gliderecords-are-killing-your-app-performance/</guid>
      <description>In a troubleshooting conversation with a couple of my teammates, I realized that I take GlideRecord (and its partner GlideAggregate) for granted. When you make that simple gr.query() call, what happens? What SQL does it run? What does the real underlying table structure look like? Are there indexes? Are additional queries run when you dot walk? Does any of this hit a cache? How does the cache work? Where are the optimizations under the hood?</description>
    </item>
    
    <item>
      <title>Share knowledge, don’t worry about the competition</title>
      <link>https://codecreative.io/blog/share-knowledge-dont-worry-about-the-competition/</link>
      <pubDate>Thu, 23 Jun 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/share-knowledge-dont-worry-about-the-competition/</guid>
      <description>I first thought about sharing what I know back in 2012 and even went so far as to bring it up in an interview with my soon to be employer. “So how do you feel about me sharing all of your best kept secrets” might not make the top 10 list of questions to ask your interviewer but surprisingly with a little tweaking it didn’t seem to do me any harm.</description>
    </item>
    
    <item>
      <title>What’s in a Service Portal on ServiceNow?</title>
      <link>https://codecreative.io/blog/whats-in-a-service-portal-on-servicenow/</link>
      <pubDate>Wed, 08 Jun 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/whats-in-a-service-portal-on-servicenow/</guid>
      <description>ServiceNow Service Portal Designer   Hopefully my last post on Service Portal helped you to figure out whether you or your client are ready to take advantage of this new powerful tool. Before we actually dig in and start coding and building portals though, it will help to understand a bit about the components that make up the Service Portal and what they actually do.
Don’t let the Service Portal Configuration link in the application fool you.</description>
    </item>
    
    <item>
      <title>4 Reasons You’re Not Ready For Service Portal</title>
      <link>https://codecreative.io/blog/4-reasons-youre-not-ready-for-service-portal/</link>
      <pubDate>Wed, 25 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/4-reasons-youre-not-ready-for-service-portal/</guid>
      <description>To IE or not to IE, that is the question   The most common question I received at Knowledge 16 was “Should we stick with CMS or move forward with Service Portal.” As a developer I want to tell everyone to move to Service Portal if for no other reason than so I never have to touch an iframe ever again. Aside from that, Service Portal is truly a much more refined delivery tool for portals and I can’t recommend it highly enough.</description>
    </item>
    
    <item>
      <title>Service Portal: First Impressions</title>
      <link>https://codecreative.io/blog/service-portal-first-impressions/</link>
      <pubDate>Fri, 13 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/service-portal-first-impressions/</guid>
      <description>ServiceNow Service Portal   So for the last week and a half I have been spending some time exploring the new Service Portal on the ServiceNow developer site. In fact, I may have been spending a bit too much time on it as my In House Designer expressed some displeasure:
  Sarah&#39;s Tweet   But the time spent has been fruitful and I have learned quite a bit about this new tool.</description>
    </item>
    
    <item>
      <title>ServiceNow Engagement: The Path Forward</title>
      <link>https://codecreative.io/blog/servicenow-engagement-the-path-forward/</link>
      <pubDate>Fri, 06 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/servicenow-engagement-the-path-forward/</guid>
      <description>&amp;ldquo;No application is safe. I’m telling you, name any application we use and I could rebuild it better on this platform. This could replace SAP.&amp;rdquo;
John didn’t have to respond. His “you’re crazier than a shithouse rat” look was well practiced by this point in our friendship. In hindsight, tilting at SAP may have been carrying it a little far but hey, where would we be if we never looked at things and thought of what they might be.</description>
    </item>
    
    <item>
      <title>ECMAScript 5 in ServiceNow Helsinki!</title>
      <link>https://codecreative.io/blog/ecmascript-5-in-servicenow-helsinki/</link>
      <pubDate>Thu, 05 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/ecmascript-5-in-servicenow-helsinki/</guid>
      <description>Knowledge 16 ECMAScript Session   Ok, so it may not be official yet and I know this is a weird thing to get worked up about. Besides, ECMAScript 5 is so 2011, you say. Weren’t we still talking about DVD’s in 2011? Shouldn’t we be talking about ES 6 / ECMAScript 2015? Aren’t we already using polyfills for that?
I hear you. I’m with you. But let’s not forget that a lot of code runs on top of ServiceNow’s modified Rhino engine, including yours and mine.</description>
    </item>
    
    <item>
      <title>Where to Start with Knowledge 16</title>
      <link>https://codecreative.io/blog/where-to-start-with-knowledge-16/</link>
      <pubDate>Wed, 04 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/where-to-start-with-knowledge-16/</guid>
      <description>Preview for Developers The Knowledge Conference is the ServiceNow New Year. It is a time for reminiscing on the past year’s projects, setting goals for the next conference year, meeting new friends, having fun with old friends, and of course drinking enough to not remember half of it.
This year will be my 4th Knowledge Conference, missing only K13 on account of the evils of the number 13 (not at all because I was the rookie on the team and drew the short straw).</description>
    </item>
    
    <item>
      <title>How to Fix CMS iFrame Resizing (Video)</title>
      <link>https://codecreative.io/blog/how-to-fix-cms-iframe-resizing/</link>
      <pubDate>Tue, 03 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-fix-cms-iframe-resizing/</guid>
      <description>Update (03/21/2017): This script currently only works if the Frame Name on your iFrame is gsft_main. Thanks to Anil Varanasi for catching this!
  Everyone has that one thing that makes them hate their job. And I don’t mean I’m just gonna stop going I hate my job. I mean I could set the building on fire I hate my job. For me, that thing is iFrames. ServiceNow has given them a lot of love over the years but as the dubbed Portal Guy of my team I would like to see them in an episode of Will It Blend.</description>
    </item>
    
    <item>
      <title>Perfectionism is Procrastination</title>
      <link>https://codecreative.io/blog/perfectionism-is-procrastination/</link>
      <pubDate>Mon, 02 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/perfectionism-is-procrastination/</guid>
      <description>Breaking the connection to relaunch Code Creative Nine months, thats how long it takes the female human body to create a new life… conveniently, it’s also how long it has taken me to create absolutely nothing. It’s not that I stopped trying to create or because I was slacking off, quite the contrary. I spent my nights and weekends learning, working on content, writing code, designing graphics, trying to bring my passion project to life.</description>
    </item>
    
    <item>
      <title>Adding Doctype to a UI Page</title>
      <link>https://codecreative.io/blog/adding-doctype-to-a-ui-page/</link>
      <pubDate>Mon, 15 Jun 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/adding-doctype-to-a-ui-page/</guid>
      <description>Today, I am going to share a trick I learned to add a doctype to a UI Page based off of will.leingang&amp;rsquo;s article Making a UI Page without using the framework page template. A page&amp;rsquo;s doctype usually doesn&amp;rsquo;t seem to make a huge difference in output but occasionally, certain scripts and html/css tricks require a specific doctype. In my case, I needed the standard HTML5 doctype.
What Not To Do As my first attempt, I foolishly tried this for the UI Page:</description>
    </item>
    
    <item>
      <title>How To Make Custom Pivot Tables in ServiceNow (Video)</title>
      <link>https://codecreative.io/blog/how-to-make-custom-pivot-tables/</link>
      <pubDate>Mon, 01 Jun 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-make-custom-pivot-tables/</guid>
      <description>Well, it seems that pivot tables are just a little bit popular in community and while sometimes native pivot tables will suffice, there are times when custom is the only route to take. Sadly, these pivot table questions have all too often gone unanswered or answered with the dreaded &amp;ldquo;You can&amp;rsquo;t do that out of box&amp;rdquo;. Well no more. The technique covered in Code Creative Episode 3 can be used to build nearly any pivot table imaginable!</description>
    </item>
    
    <item>
      <title>How to get more out of ServiceNow Pivot Tables (Video)</title>
      <link>https://codecreative.io/blog/how-to-get-more-out-of-servicenow-pivot-tables/</link>
      <pubDate>Mon, 18 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-get-more-out-of-servicenow-pivot-tables/</guid>
      <description>So its time for the release of Code Creative Episode 2! I had a lot of fantastic followup questions from How to Build Custom Charts and Reports but the one that kept jumping out was &amp;ldquo;How do I do a Pivot Table?&amp;rdquo; In fact, this was a common question even before I released Episode 1 and your wish is my command. Sadly, though, High Charts does not offer a Pivot Table in ServiceNow.</description>
    </item>
    
    <item>
      <title>Demystifying GlideAjax (Infographic)</title>
      <link>https://codecreative.io/blog/demystifying-glideajax/</link>
      <pubDate>Sat, 09 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/demystifying-glideajax/</guid>
      <description>Let&amp;rsquo;s face it, unless you&amp;rsquo;re a web developer who has been on the AJAX bandwagon for a while, GlideAjax can be downright confusing. At best, it is often a mystical voodoo incantation, sure you can say the words but your just one &amp;ldquo;Klaatu verata necktie&amp;rdquo; away from unleashing a horde of undead code that will leave you wanting to unload a fist full of boomstick on your computer. With that in mind, I have put together the infographic below to illuminate your path, equip you for the debugging battles ahead, and return you to your time.</description>
    </item>
    
    <item>
      <title>How to Build Custom ServiceNow Charts and Reports (Video)</title>
      <link>https://codecreative.io/blog/how-to-build-custom-charts-and-reports/</link>
      <pubDate>Mon, 04 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-build-custom-charts-and-reports/</guid>
      <description>The ServiceNow Community can be a tough place to communicate without winding up with a wall of intimidating technical text. Add to that the gaps in technical knowledge and understanding as well as differences in jargon and we often end up with walls of text and frequent churn in the comments in order to arrive at a solution. Thankfully, the Community offers some great rich media features like videos!</description>
    </item>
    
  </channel>
</rss>