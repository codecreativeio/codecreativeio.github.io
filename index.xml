<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Developing Creative Business Solutions On ServiceNow on CodeCreative | A ServiceNow Blog</title>
    <link>https://codecreative.io/</link>
    <description>Recent content in Developing Creative Business Solutions On ServiceNow on CodeCreative | A ServiceNow Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 20 Feb 2022 20:46:00 +0000</lastBuildDate><atom:link href="https://codecreative.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Foreword / FAQ</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/foreword/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/foreword/</guid>
      <description>Once again I would like to thank everyone for their patience and participation. A new year and a new set of complications but the analysis is done and the report is published. Since publishing last year&amp;rsquo;s report I have received a lot of feedback, public and private. Some of it has been great and led to some improvements this year. Some of it was valid critique that I found helpful. Some of it was less than polite.</description>
    </item>
    
    <item>
      <title>Foreword</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/foreword/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/foreword/</guid>
      <description>First of all, I want to thank everyone for their patience regarding the publishing of the final results of the 2020 ServiceNow Salary Influence Survey. The folks who reached out to ask about it were very polite about it and I appreciate the support. There are a number of reasons for the delay in publishing and as someone who keeps private matters private, I debated extensively on how much to share.</description>
    </item>
    
    <item>
      <title>Summary</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/summary/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/summary/</guid>
      <description>The 2021 ServiceNow Salary Influence Survey was an openly published survey that ran from September 27, 2021 to October 19, 2021 with the purpose of improving the ServiceNow community’s understanding of compensation in the industry. The analysis continued the investigation from the previous year&amp;rsquo;s survey to identify which features of an individual’s profile most significantly influenced compensation as well as provide the more traditional compensation tables to assist members of the ServiceNow community in determining their worth.</description>
    </item>
    
    <item>
      <title>Summary</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/summary/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/summary/</guid>
      <description>The 2020 ServiceNow Salary Influence Survey was an openly published survey that ran from September 08, 2020 through October 05, 2020 with the purpose of improving the ServiceNow community&amp;rsquo;s understanding of compensation in the industry. The analysis attempted to identify which features of an individual&amp;rsquo;s profile most significantly influenced compensation as well as provide the more traditional compensation tables to assist members of the ServiceNow community in determining their worth. The survey analyzed over 1700 different variations in the features generated from the 182 questions / survey inputs in the attempt to identify causes of compensation variation.</description>
    </item>
    
    <item>
      <title>What is Service Portal?</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/what-is-service-portal/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/what-is-service-portal/</guid>
      <description>Service Portal is a powerful framework for building self-service websites and custom web app UIs. Using a hierarchy of table driven components, Service Portal simplifies the process and reduces the code required to build a web interface.
Building Blocks The Service Portal framework uses a combination of well known web libraries and unique framework building blocks to power the UI.
For front-end web developers, a few libraries are in use which are likely familiar:</description>
    </item>
    
    <item>
      <title>What is ServiceNow?</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/what-is-servicenow/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/what-is-servicenow/</guid>
      <description>First and foremost, ServiceNow is a web application you can access through your browser in order to track and automate work. Beyond that basic explanation, ServiceNow is a bit like the software equivalent of the blind men and an elephant parable. What ServiceNow is to you depends largely on which piece of it you get your hands on first. As a company, ServiceNow provides both Platform as a Service (PaaS) and Software as a Service (SaaS) offerings via it&amp;rsquo;s Now Platform in a single tenant architecture.</description>
    </item>
    
    <item>
      <title>Top Influencing Features</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/top-influencing-features/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/top-influencing-features/</guid>
      <description>Similar to last year, the primary goal of the Salary Survey was to identify which features had the strongest influence on an individual’s compensation. The results of this years survey validated the major findings regarding the most important features. Overall, this year&amp;rsquo;s survey found that somewhere between 85% and 94% of the ability of the collected data to predict an individual&amp;rsquo;s compensation could be summarized by an individual&amp;rsquo;s country of employment, years of experience, and (for United States based workers) what percent of your total compensation is guaranteed vs variable (method).</description>
    </item>
    
    <item>
      <title>Top Influencing Features</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/top-influencing-features/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/top-influencing-features/</guid>
      <description>The primary goal of the Salary Survey was to identify which features had the strongest influence on an individual&amp;rsquo;s compensation. Ideally, this would have provided insights into what actions an individual could take to maximize their worth. The results of the analysis were significantly less inspiring than anticipated. Overall, the analysis found that when compared to random prediction models, somewhere between 81% and 93% of the ability of the collected data to predict an individual&amp;rsquo;s compensation could be summarized by an individual&amp;rsquo;s country of employment, years of experience, and (for United States based workers) what percent of your total compensation is guaranteed vs variable.</description>
    </item>
    
    <item>
      <title>Exercise: Branding the Portal</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/branding-the-portal/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/branding-the-portal/</guid>
      <description>Objective: To use the Service Portal Branding Editor to modify the branding of a portal.
  Exercise Goal   Modifying the basic branding is a great way to get introduced to Service Portal. It is an easy skill to pick up which requires no code and can be performed by administrators.
In this exercise, we will clone the baseline ITSM portal to create our own portal to modify through the rest of this guide.</description>
    </item>
    
    <item>
      <title>What is a ServiceNow Instance?</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/what-is-a-servicenow-instance/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/what-is-a-servicenow-instance/</guid>
      <description>This is a ServiceNow Instance   As mentioned in the previous section, ServiceNow operates using a single tenant architecture meaning that each customer gets their own copy or multiple copies of ServiceNow in the cloud. These copies are known as ServiceNow instances. Users can access an instance via web browser using each instance&amp;rsquo;s unique URL such as https://companyname.service-now.com.
Each instance can run multiple applications side by side, so a single instance could potentially host an ITSM, HR, CSM, and Custom Apps all at the same base URL.</description>
    </item>
    
    <item>
      <title>Demographic Influence</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/demographic-influence/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/demographic-influence/</guid>
      <description>Beyond the top influencing features, the members of the ServiceNow community expressed an interest in exploring what influence a variety of other features may have. In the next section, the influence of demographic features on compensation will be explored. The methods used in this section can be viewed here.
Gender   Total Compensation Distribution by Gender and Country GNI Per Capita        Survey Population Female (GNI Per Capita &amp;lt;= 37895) Male (GNI Per Capita &amp;lt;= 37895) Female (GNI Per Capita &amp;gt; 37895) Male (GNI Per Capita &amp;gt; 37895)     Min 1500 28195 1500 40739 15724   Q1 90000 29718.</description>
    </item>
    
    <item>
      <title>Demographic Influence</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/demographic-influence/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/demographic-influence/</guid>
      <description>Beyond the top influencing features, the members of the ServiceNow community expressed an interest in exploring what influence a variety of other features may have. In the next section, the influence of demographic features on compensation will be explored. The methods used in this section can be viewed here.
Gender   Total Compensation Distribution (Intl$) by Gender and Country GNI Per Capita        Female (GNI Per Capita &amp;lt;= 55840) Male (GNI Per Capita &amp;lt;= 55840) Female (GNI Per Capita &amp;gt; 55840) Male (GNI Per Capita &amp;gt; 55840)     Min 12,730 11,315 48,880 29,200   Q1 30,646 40,075 76,500 113,527   Median 55,634 63,910 118,560 140,000   Q3 84,866 93,588 129,157 174,500   Max 141,773 198,020 275,000 390,000    The gender pay gap is a thoroughly researched phenomenon and all indications point toward the existence of the pay gap within the ServiceNow industry as well.</description>
    </item>
    
    <item>
      <title>Exercise: Creating a Theme</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/creating-a-theme/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/creating-a-theme/</guid>
      <description>Objective: To create a custom theme and apply it to a Service Portal to further modify the portal style.
  Exercise Goal   Creating a theme takes our styles one step further and brings our portal closer to compliance with a corporate style guide. With just a little SASS and CSS we can take our portal a long way.
In this exercise, we will clone the La Jolla Theme record, modify it&amp;rsquo;s styles, and apply it to the CodeCreative portal we created in the last exercise.</description>
    </item>
    
    <item>
      <title>Exercise: Get a Personal Developer Instance</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/get-a-personal-developer-instance/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/get-a-personal-developer-instance/</guid>
      <description>Objective: Obtain and login to ServiceNow Personal Developer Instance
Obtaining ServiceNow Personal Developer Instance (PDI) is your first step to exploring the full potential of the platform and furthering your skills with it. Let&amp;rsquo;s get started!
Exercise Follow the below instructions to complete the exercise:
 In a web browser, navigate to https://developer.servicenow.com/   Note: Create an account if you do not already have one   Log in to your account</description>
    </item>
    
    <item>
      <title>Education Influence</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/education-influence/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/education-influence/</guid>
      <description>Certifications   Compensation by Certification When Compared To Median Compensation of Individual&#39;s Peer Group        Below Median At Median Above Median     Survey Population 39.13% 21.30% 39.57%   Certified System Administrator 40.10% 19.80% 40.10%   CIS - IT Service Management 35.23% 15.91% 48.86%   Certified Application Developer 31.82% 19.70% 48.48%   CIS - Discovery 33.33% 23.33% 43.</description>
    </item>
    
    <item>
      <title>Exercise: Overriding Styles with CSS Includes</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/overriding-styles-with-css-includes/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/overriding-styles-with-css-includes/</guid>
      <description>Objective: To further modify the theme and styles, including fonts, using CSS Includes on the Theme record.
  Exercise Goal   Now that we have a basic theme, let&amp;rsquo;s introduce some new fonts and styles using Theme CSS Includes. CSS Includes are the best place to put CSS styles that should be applied across every page of the portal.
In this exercise, we will create a CSS Include, add it to our CodeCreative Theme record, and update our portals styles to reflect the Exercise Goal pictured above.</description>
    </item>
    
    <item>
      <title>Exercise: Navigating the UI</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/navigating-the-ui/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/navigating-the-ui/</guid>
      <description>Objective: Practice basic ServiceNow usage including:
  Navigating ServiceNow
  Viewing records in lists and forms
  Now that we have a Personal Developer Instance, let&amp;rsquo;s learn how to get around and handle the basics of using ServiceNow. These techniques will set the foundation for everything else you can do with ServiceNow.
Exercise Follow the below instructions to complete the exercise:
  Log in to your Personal Developer Instance</description>
    </item>
    
    <item>
      <title>Current Role Influence</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/current-role-influence/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/current-role-influence/</guid>
      <description>Current Job Level   Compensation by Current Job Level When Compared To Median Compensation of Individual&#39;s Peer Group        Below Median At Median Above Median     Entry level 54.55% 27.27% 18.18%   Intermediate or experienced level 44.79% 16.67% 38.54%   Senior experienced level 31.40% 29.07% 39.53%   First-level management 25.00% 12.50% 62.50%   Middle-level management 44.44% 11.</description>
    </item>
    
    <item>
      <title>Exercise: Building a Homepage</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/building-a-homepage/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/building-a-homepage/</guid>
      <description>Objective: To create a customized homepage for the portal.
  Exercise Goal   With the portal level components coming together strong, let&amp;rsquo;s turn our attention to the page level components. Service Portal comes with a built in layout engine that makes assembling pages a breeze.
In this exercise, we will explore cloning and customizing pages in Service Portal by creating a custom homepage.
Exercise Follow the below instructions to complete the exercise:</description>
    </item>
    
    <item>
      <title>Exercise: Filtering Records in the List View</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/filtering-records-in-the-list-view/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/filtering-records-in-the-list-view/</guid>
      <description>Objective: Practice filtering records in the list view:
Mastering the list view is one of the more critical skills for new ServiceNow users. In this first List View exercise, we&amp;rsquo;ll focus on different ways of filtering records.
Exercise   In your Personal Developer Instance, navigate to Incident &amp;gt; All
   Using the list header search, find all Incidents containing the Short Description SAP (Learn more about the list header search)</description>
    </item>
    
    <item>
      <title>Reference: Years of Experience Scatter Plots</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/experience-scatter-plots/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/experience-scatter-plots/</guid>
      <description>This reference page contains the scatter plots depicting the relationship between years of experience and median compensation as discussed in the Top Influencing Features section of the report.
Australia Based   Median Compensation per Years of ServiceNow Experience for Australia Based Workers       Years Median Compensation     4 70,139   5 125,000   6 128,472   8 107,639    Canada Based   Median Compensation per Years of ServiceNow Experience for Canada Based Workers       Years Median Compensation     4 105,042   6 67,227   7 75,630   12 79,832   15 75,630   16 138,655   19 147,059   23 181,513   27 84,034   35 100,840    India Based   Median Compensation per Years of ServiceNow Experience for India Based Workers       Years Median Compensation     1 17,916   2 23,574   3 19,802   4 42,433   5 40,075   6 47,148   7 63,649   8 84,866   9 56,577   10 94,295   11 198,020   13 138,072   14 150,872   15 99,010   16 101,367   20 147,336    United Kingdom Based   Median Compensation per Years of ServiceNow Experience for United Kingdom Based Workers       Years Median Compensation     3 68,014   5 51,471   6 95,588   12 73,529   15 117,666   24 125,000   42 147,059    United States Based - Low Risk Pay Group   Median Compensation per Years of ServiceNow Experience for US Based Workers Where Compensation Fixed  85%       Years Median Compensation     1 60,000   2 117,027   3 94,000   4 112,525   5 135,000   6 149,000   7 150,350   8 125,000   9 145,750   11 181,400   13 125,000   16 73,000    United States Based - High Risk Pay Group   Median Compensation per Years of ServiceNow Experience for US Based Workers Where Compensation Fixed      Years Median Compensation     2 80,000   3 170,000   4 244,000   5 128,250   6 236,500   7 217,500   8 250,000   9 174,000   10 357,500   11 270,000    </description>
    </item>
    
    <item>
      <title>Exercise: Configuring Widgets</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/configuring-widgets/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/configuring-widgets/</guid>
      <description>Objective: To configure and create simple Widgets in Service Portal
  Exercise Goal   One more step to finish up our portal: Widgets. Widgets are the heart and soul of the Service Portal world. All of the content from the header to the footer, the menus, the lists, the forms, all of it is driven by Widgets. Widgets can be as simple or complex as you need.
In this exercise, we will explore the basic foundations of Widgets, Widget Instances, and Instance options which are necessary to begin Widget development.</description>
    </item>
    
    <item>
      <title>Exercise: Creating and Editing Records</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/creating-and-editing-records/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/creating-and-editing-records/</guid>
      <description>Objective: Practice creating and editing records in the list and form view:
ServiceNow wouldn&amp;rsquo;t be very useful if you couldn&amp;rsquo;t change the records. Thankfully, there are many different ways to change the data as long as the user has permission. If you are operating in your personal developer instance, you should have admin privileges which will let you edit just about anything.
Exercise   In your Personal Developer Instance, navigate to Incident &amp;gt; Open</description>
    </item>
    
    <item>
      <title>Negotiation Influence</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/negotiation-influence/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/negotiation-influence/</guid>
      <description>Negotiation as a tactic to increase individual compensation is well established in both industry literature and research literature, so it may seem surprising that negotiation did not rank in the top influencing features. With a negative feature importance, the LOCO method implies that negotiation features are not important in predicting an individual&amp;rsquo;s compensation. To accurately frame the conversation, it should be noted that this analysis was examining real-world impact of behaviors on compensation.</description>
    </item>
    
    <item>
      <title>Reference: Survey Response Reports</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/survey-response-reports/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/survey-response-reports/</guid>
      <description>The below charts provide a breakdown for each survey question on the ServiceNow Salary Influence Survey 2020. Each chart indicates the percentage of the responding population that selected a particular response for the given question. Some questions were omitted from this summary due to the risk of revealing identifying information. Questions omitted from this summary were still used in the analysis of the data to produce the final results.
Contents:</description>
    </item>
    
    <item>
      <title>CSS and SCSS Processing</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/css-and-scss-processing/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/css-and-scss-processing/</guid>
      <description>So far we have reviewed many different CSS fields across the Service Portal framework. Since CSS evaluation is highly dependent on it&amp;rsquo;s order, it helps to understand how these different fields get ordered and processed.
Unfortunately, much of the documentation around this can lead to even more confusion. In order to understand the whole picture, we first have to understand that Service Portal does not generate a single blob of CSS.</description>
    </item>
    
    <item>
      <title>Next Steps</title>
      <link>https://codecreative.io/guides/getting-started-on-servicenow/next-steps/</link>
      <pubDate>Sat, 23 Feb 2019 20:20:49 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-on-servicenow/next-steps/</guid>
      <description>Over the course of this guide, we have covered some basic knowledge and foundational skills for getting started on ServiceNow. At this point you should be able to:
  Obtain a Personal Developer Instance
  Navigate the baseline UI
  Navigate records using the form and list views
  Create and edit records using the form and list views
  With practice and persistence, you can grow these skills to learn the many capabilities that ServiceNow has to offer.</description>
    </item>
    
    <item>
      <title>Reference: Methods</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/methods/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/methods/</guid>
      <description>Step 1: Survey Response Collection This survey collected results via online submission using a self-hosted LimeSurvey server. The survey began on September 08, 2020 and remained open through October 05, 2020. The survey was openly published on LinkedIn and CodeCreative.io, specifically targeting members of the ServiceNow Community. A list of Survey Questions and summary of responses can be found here. The survey was a multi part form which would save after each part, allowing for some surveys to be submitted incomplete.</description>
    </item>
    
    <item>
      <title>Next Steps</title>
      <link>https://codecreative.io/guides/getting-started-with-service-portal/next-steps/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/getting-started-with-service-portal/next-steps/</guid>
      <description>Over the course of this guide, we have covered some basic knowledge and foundational skills for getting started with ServiceNow&amp;rsquo;s Service Portal. At this point you should be able to:
  Create a new Portal
  Style a Portal with a Theme and CSS Includes
  Create and Configure Portal Pages
  Create and Configure Widgets and Widget Instances
  To grow your skills on Service Portal, there are multiple paths that you can pursue:</description>
    </item>
    
    <item>
      <title>Reference: Survey Response Reports</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/survey-response-reports/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/survey-response-reports/</guid>
      <description>The below charts provide a breakdown for each survey question on the ServiceNow Salary Influence Survey 2020. Each chart indicates the percentage of the responding population that selected a particular response for the given question. Some questions were omitted from this summary due to the risk of revealing identifying information. Questions omitted from this summary were still used in the analysis of the data to produce the final results.
Contents:</description>
    </item>
    
    <item>
      <title>Reference: Salary Tables</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/salary-tables/</link>
      <pubDate>Sun, 14 Mar 2021 14:40:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2020/salary-tables/</guid>
      <description>Role Based Salary Tables The following salary tables were generated directly from the survey responses without considering any outside data. Based on the findings of the analysis, years of experience is the strongest predictor in determining which quartile an individual is most likely to fall into. Depending on the country, the particular experience can vary. For the United States and Australia, ServiceNow experience was most correlated with compensation. For India, IT experience was most relevant.</description>
    </item>
    
    <item>
      <title>Reference: Methods</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/methods/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/methods/</guid>
      <description>Step 1: Survey Response Collection This survey collected results via online submission using PaperForm. The survey began on September 27, 2021 and remained open through October 19, 2021. The survey was openly published on LinkedIn and CodeCreative.io, specifically targeting members of the ServiceNow Community. A list of Survey Questions and summary of responses can be found here. The survey was a multi part form which would save after each part, allowing for some surveys to be submitted incomplete.</description>
    </item>
    
    <item>
      <title>Reference: Salary Tables</title>
      <link>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/salary-tables/</link>
      <pubDate>Sun, 20 Feb 2022 20:46:00 +0000</pubDate>
      
      <guid>https://codecreative.io/guides/servicenow-salary-influence-survey-2021/salary-tables/</guid>
      <description>Role Based Salary Tables The following salary tables were generated directly from the survey responses without considering any outside data. The findings of the survey indicate that these salary tables are not actually the most effective way to predict compensation. In order to maintain consistency with traditional salary table based approaches, the decision was made to include the job titles in the tables. Country and role breakdowns with too few responses submitted were omitted both to preserve anonymity and to reduce the risk of publishing skewed data.</description>
    </item>
    
    <item>
      <title>On Pay and Negotiations</title>
      <link>https://codecreative.io/blog/on-pay-and-negotiations/</link>
      <pubDate>Sun, 03 Oct 2021 15:51:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/on-pay-and-negotiations/</guid>
      <description>With the Salary Survey running and my current career transition, now seems like a good time to discuss job searching, compensation structures, and negotiating in the ServiceNow industry. Obviously, I&amp;rsquo;ve spent some time interviewing and discussing compensation recently, so I&amp;rsquo;d like to share some of my thoughts on how to make the most of your compensation package. Unlike the salary survey, this is just my personal thoughts and experience on the matter.</description>
    </item>
    
    <item>
      <title>GlideRecord: Convert to JSON (Functional)</title>
      <link>https://codecreative.io/notebook/gliderecord-patterns-to-json-fp/</link>
      <pubDate>Tue, 10 Aug 2021 17:01:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/gliderecord-patterns-to-json-fp/</guid>
      <description>Purpose: How to write a GlideRecord loop to convert the GlideRecord to a Javascript Object or JSON Object using a Functional Programming style
Use: Use this script in a Server Script. Typically this will be used in Scripted REST Endpoint, Service Portal Widget&amp;rsquo;s Server Script, or GlideAjax Script Include. Depending on the specific place used, conversion from a Javascript Object to a JSON string may be automatic.
This technique can output either an array or an object / map depending on the intended goal.</description>
    </item>
    
    <item>
      <title>GlideRecord: Convert to JSON (Imperative)</title>
      <link>https://codecreative.io/notebook/gliderecord-patterns-to-json/</link>
      <pubDate>Tue, 10 Aug 2021 17:01:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/gliderecord-patterns-to-json/</guid>
      <description>Purpose: How to convert a GlideRecord set to a Javascript Object or JSON Object
Use: Use this script in a Server Script. Typically this will be used in Scripted REST Endpoint, Service Portal Widget&amp;rsquo;s Server Script, or GlideAjax Script Include. Depending on the specific place used, conversion from a Javascript Object to a JSON string may be automatic.
This technique can output either an array or an object / map depending on the intended goal.</description>
    </item>
    
    <item>
      <title>GlideRecord: Batch Update (Functional)</title>
      <link>https://codecreative.io/notebook/gliderecord-patterns-batch-update-fp/</link>
      <pubDate>Sun, 08 Aug 2021 17:01:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/gliderecord-patterns-batch-update-fp/</guid>
      <description>Purpose: How to write a GlideRecord loop to batch update Records in ServiceNow using a Functional Programming style
Use: Use this script in a Server Script. Typically this will be used in a Background Script, Scheduled Job, or Fix Script in order to execute a batch operation to fix records, particularly after a data import, system upgrade, or app upgrade. In the following example, a fix could be applied to every incident record and a comment added to annotate the fix.</description>
    </item>
    
    <item>
      <title>GlideRecord: Batch Update (Imperative)</title>
      <link>https://codecreative.io/notebook/gliderecord-patterns-batch-update/</link>
      <pubDate>Sun, 08 Aug 2021 17:01:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/gliderecord-patterns-batch-update/</guid>
      <description>Purpose: How to write a GlideRecord loop to batch update Records in ServiceNow
Use: Use this script in a Server Script. Typically this will be used in a Background Script, Scheduled Job, or Fix Script in order to execute a batch operation to fix records, particularly after a data import, system upgrade, or app upgrade. In the following example, a fix could be applied to every incident record and a comment added to annotate the fix.</description>
    </item>
    
    <item>
      <title>GlideRecord: If Record Exists (Functional)</title>
      <link>https://codecreative.io/notebook/gliderecord-patterns-if-record-exists-fp/</link>
      <pubDate>Sun, 08 Aug 2021 17:01:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/gliderecord-patterns-if-record-exists-fp/</guid>
      <description>Purpose: How to execute code conditionally if a matching record exists or is found in ServiceNow using a Functional Programming style
Use: Use this script in a Server Script to test if a record exists before deciding how the code should continue. This allows handling error cases when a record doesn&amp;rsquo;t exist, creation of expected records, or an alternate handling path depending on whether the record exists or not. The call to setLimit is extremely important to maintaining the best performance by telling the database to stop searching after finding one matching record.</description>
    </item>
    
    <item>
      <title>GlideRecord: If Record Exists (Imperative)</title>
      <link>https://codecreative.io/notebook/gliderecord-patterns-if-record-exists/</link>
      <pubDate>Sun, 08 Aug 2021 17:01:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/gliderecord-patterns-if-record-exists/</guid>
      <description>Purpose: How to execute code conditionally if a matching record exists in ServiceNow
Use: Use this script in a Server Script to test if a record exists before deciding how the code should continue. This allows handling error cases when a record doesn&amp;rsquo;t exist, creation of expected records, or an alternate handling path depending on whether the record exists or not. The call to setLimit is extremely important to maintaining the best performance by telling the database to stop searching after finding one matching record.</description>
    </item>
    
    <item>
      <title>CodeCreative Refresh 2021</title>
      <link>https://codecreative.io/blog/codecreative-refresh-2021/</link>
      <pubDate>Tue, 27 Jul 2021 21:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/codecreative-refresh-2021/</guid>
      <description>It&amp;rsquo;s still a little hard to believe it, but apparently I have been doing this CodeCreative thing for 6 years. It was back in May 2015 that Sarah and I put together the original brand mark, video intro, and the first website iteration. Things have come a long way since then. We&amp;rsquo;ve experimented with different content like courses, guides, and live streaming. We&amp;rsquo;ve helped mentor people into the industry and helped others land jobs.</description>
    </item>
    
    <item>
      <title>UI Builder: Add Components to Page</title>
      <link>https://codecreative.io/notebook/ui-builder-add-components-to-page/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-add-components-to-page/</guid>
      <description>Purpose: How to add components to a Page in ServiceNow UI Builder
 Open the UI Builder editor for an Experience Find the content panel Click the three vertical dots menu icon next to Main (or other container or exist component) Click &amp;ldquo;Add Component&amp;rdquo; Click a component in the menu to add it to the page  </description>
    </item>
    
    <item>
      <title>UI Builder: Add Header Menu</title>
      <link>https://codecreative.io/notebook/ui-builder-add-header-menu/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-add-header-menu/</guid>
      <description>Purpose: How to add a header menu to a Portal Experience in ServiceNow UI Builder. The header menu is displayed at the top of every page in a Portal Experience.
 Open Experience in UI Builder Click &amp;ldquo;Menu&amp;rdquo; Click &amp;ldquo;Edit Experience Settings&amp;rdquo; Click &amp;ldquo;Navigation and Menus&amp;rdquo; Click &amp;ldquo;Advanced Footer Settings&amp;rdquo;  Note: Currently the Advanced Navigation Menu Settings link is broken   Complete UX Page Property form as follows:  Page: current Portal Experience name Name: chrome_menu Route: leave blank Description: any text Value:  [ { &amp;#34;value&amp;#34;: { &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;Knowedge&amp;#34; } }, &amp;#34;children&amp;#34;: { &amp;#34;action&amp;#34;: { &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;Report an issue&amp;#34; }, &amp;#34;type&amp;#34;: &amp;#34;route&amp;#34;, &amp;#34;rightIcon&amp;#34;: &amp;#34;chevron-right-fill&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;route&amp;#34;: &amp;#34;catalog&amp;#34;, &amp;#34;fields&amp;#34;: { &amp;#34;sysId&amp;#34;: &amp;#34;3f1dd0320a0a0b99000a53f7604a2ef9&amp;#34; } } }, &amp;#34;items&amp;#34;: [ { &amp;#34;value&amp;#34;: { &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;Categories&amp;#34; } }, &amp;#34;children&amp;#34;: { &amp;#34;action&amp;#34;: { &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;Browse All&amp;#34; }, &amp;#34;type&amp;#34;: &amp;#34;route&amp;#34;, &amp;#34;rightIcon&amp;#34;: &amp;#34;chevron-right-fill&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;route&amp;#34;: &amp;#34;article&amp;#34;, &amp;#34;fields&amp;#34;: { &amp;#34;sysId&amp;#34;: &amp;#34;3020c9b1474321009db4b5b08b9a712d&amp;#34; } } }, &amp;#34;items&amp;#34;: [ { &amp;#34;value&amp;#34;: { &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;IT&amp;#34; }, &amp;#34;type&amp;#34;: &amp;#34;route&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;route&amp;#34;: &amp;#34;article&amp;#34;, &amp;#34;fields&amp;#34;: { &amp;#34;sysId&amp;#34;: &amp;#34;3020c9b1474321009db4b5b08b9a712d&amp;#34; } } } }, { &amp;#34;value&amp;#34;: { &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;Benefits&amp;#34; }, &amp;#34;type&amp;#34;: &amp;#34;route&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;route&amp;#34;: &amp;#34;article&amp;#34;, &amp;#34;fields&amp;#34;: { &amp;#34;sysId&amp;#34;: &amp;#34;3020c9b1474321009db4b5b08b9a712d&amp;#34; } } } } ] } } ] } } ]  Click Submit Close the current browser tab to return to the UI Builder browser tab Close portal settings Click &amp;ldquo;Open&amp;rdquo; to test page  Special thanks to Ninja Bytes</description>
    </item>
    
    <item>
      <title>UI Builder: Add Logo to Footer</title>
      <link>https://codecreative.io/notebook/ui-builder-add-logo-to-footer/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-add-logo-to-footer/</guid>
      <description>Purpose: How to add a logo to the footer of a Portal Experience in ServiceNow UI Builder. The logo will appear at the bottom of a Portal Experience on every page.
 Open Experience in UI Builder Click &amp;ldquo;New&amp;rdquo; Click &amp;ldquo;Edit Experience Settings&amp;rdquo; Click &amp;ldquo;Branding and Theming&amp;rdquo; Click &amp;ldquo;Advanced Settings&amp;rdquo; In the related lists, open the Theme record In the UX Theme Asset related list, click &amp;ldquo;New&amp;rdquo; Complete the form as follows:  Asset: Create a new UX Theme Asset record as follows:  Category: Image Name: any text Attachment: upload an image file to the attachment field   Asset Properties: { &amp;quot;position&amp;quot;: &amp;quot;footer_logo&amp;quot; }   Click Submit Close current browser tab to return to UI Builder browser tab Close portal settings Click &amp;ldquo;Open&amp;rdquo; to test page  Special thanks to Ninja Bytes</description>
    </item>
    
    <item>
      <title>UI Builder: Add Logo to Header</title>
      <link>https://codecreative.io/notebook/ui-builder-add-logo-to-header/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-add-logo-to-header/</guid>
      <description>Purpose: How to add a logo to the header of a Portal Experience in ServiceNow UI Builder. The logo will appear at the top of a Portal Experience on every page.
 Open Experience in UI Builder Click &amp;ldquo;New&amp;rdquo; Click &amp;ldquo;Edit Experience Settings&amp;rdquo; Click &amp;ldquo;Branding and Theming&amp;rdquo; Click &amp;ldquo;Advanced Settings&amp;rdquo; In the related lists, open the Theme record In the UX Theme Asset related list, click &amp;ldquo;New&amp;rdquo; Complete the form as follows:  Asset: Create a new UX Theme Asset record as follows:  Category: Image Name: any text Attachment: upload an image file to the attachment field   Asset Properties: { &amp;quot;position&amp;quot;: &amp;quot;header_logo&amp;quot; }   Click Submit Close current browser tab to return to UI Builder browser tab Close portal settings Click &amp;ldquo;Open&amp;rdquo; to test page  Special thanks to Ninja Bytes</description>
    </item>
    
    <item>
      <title>UI Builder: Change Font Family</title>
      <link>https://codecreative.io/notebook/ui-builder-change-font-family/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-change-font-family/</guid>
      <description>Purpose: How to change the font family of text in a Portal Experience in ServiceNow UI Builder. This procedure will allow the use of custom fonts in UI Builder Portal Experiences.
 Open Experience&amp;rsquo;s UI Theme record In UX Theme Asset related list, click &amp;ldquo;New&amp;rdquo; Complete the UX Theme Asset form as follows:  Asset: Create a new UX Theme Asset record as follows:  Category: Font Name: any text Attachments: Attach the font file (.</description>
    </item>
    
    <item>
      <title>UI Builder: Create Footer</title>
      <link>https://codecreative.io/notebook/ui-builder-create-footer/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-create-footer/</guid>
      <description>Purpose: How to create a Footer for a Portal Experience in ServiceNow UI Builder. The Footer is displayed at the bottom of every page in a Portal Experience.
 Open Experience in UI Builder Click &amp;ldquo;menu&amp;rdquo; Click &amp;ldquo;Edit Experience Settings&amp;rdquo; Click &amp;ldquo;Navigation and Menus&amp;rdquo; Click &amp;ldquo;Advanced Footer Settings&amp;rdquo; Complete the form as follows:   Page: select the current Experience name
  Name: chrome_footer
  Type: json
  Route: leave blank to apply to all routes</description>
    </item>
    
    <item>
      <title>UI Builder: Create Header</title>
      <link>https://codecreative.io/notebook/ui-builder-create-header/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-create-header/</guid>
      <description>Purpose: How to create a Header for a Portal Experience in ServiceNow UI Builder. The Header is displayed at the top of every page in a Portal Experience.
 Open Experience in UI Builder Click &amp;ldquo;Menu&amp;rdquo; next to Experience name and logo Click &amp;ldquo;Edit Experience Settings&amp;rdquo; Click &amp;ldquo;Navigation and menus&amp;rdquo; Under Header, click &amp;ldquo;Advanced header settings&amp;rdquo; Fill out the form as follows:  Page: Select the Portal Experience Name Name: chrome_header Type: json Route: leave blank to apply to all routes Description: Any description text Value: { &amp;#34;privatePage&amp;#34;: { &amp;#34;searchEnabled&amp;#34;: true, &amp;#34;userPrefsEnabled&amp;#34;: true, &amp;#34;logoRoute&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;route&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;route&amp;#34;: &amp;#34;home&amp;#34;, &amp;#34;fields&amp;#34;: {} } }, &amp;#34;globalTools&amp;#34;: { &amp;#34;collapsingMenuId&amp;#34;: 0, &amp;#34;primaryItems&amp;#34;: [ { &amp;#34;label&amp;#34;: &amp;#34;UserMenu&amp;#34;, &amp;#34;icon&amp;#34;: &amp;#34;user&amp;#34;, &amp;#34;type&amp;#34;: &amp;#34;menu&amp;#34;, &amp;#34;primaryDisplay&amp;#34;: &amp;#34;icon&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;children&amp;#34;: [ { &amp;#34;condition&amp;#34;: { &amp;#34;roles&amp;#34;: [ &amp;#34;admin&amp;#34; ] }, &amp;#34;label&amp;#34;: { &amp;#34;translatable&amp;#34;: true, &amp;#34;message&amp;#34;: &amp;#34;Configure&amp;#34; }, &amp;#34;type&amp;#34;: &amp;#34;navigation&amp;#34;, &amp;#34;position&amp;#34;: 200, &amp;#34;primaryDisplay&amp;#34;: &amp;#34;none&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;type&amp;#34;: &amp;#34;external&amp;#34;, &amp;#34;opensWindow&amp;#34;: &amp;#34;true&amp;#34;, &amp;#34;value&amp;#34;: { &amp;#34;href&amp;#34;: &amp;#34;/nav_to.</description>
    </item>
    
    <item>
      <title>UI Builder: Create Page</title>
      <link>https://codecreative.io/notebook/ui-builder-create-page/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-create-page/</guid>
      <description>Purpose: How to create a Page in ServiceNow UI Builder. A Page contains the content that is displayed to the end user and can change from user to user based on rules specified in Variants.
 Navigate to UI Builder Click the name of the desired Portal Experience from the &amp;ldquo;My Experiences&amp;rdquo; list  Note: For initial homepage, skip to step 4   Click &amp;ldquo;Create a page&amp;rdquo; In the model, complete the form as follows:  Name of Page: any text Path: *any url friendly text Note: To make this the homepage of the Portal Experience, make the name the same as the the UX App Configuration record&amp;rsquo;s Landing Path   Click &amp;ldquo;Create&amp;rdquo; Click &amp;ldquo;Done&amp;rdquo;  </description>
    </item>
    
    <item>
      <title>UI Builder: Create Theme</title>
      <link>https://codecreative.io/notebook/ui-builder-create-theme/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-create-theme/</guid>
      <description>Purpose: How to create a Theme for a Portal Experience in ServiceNow UI Builder. A Theme defines CSS Custom Property values and assets that are used to configure the look and feel of a Portal Experience.
 Open Experience in UI Builder Click &amp;ldquo;Menu&amp;rdquo; next to Experience name and logo Click &amp;ldquo;Edit Experience Settings&amp;rdquo; Click &amp;ldquo;Branding and Theming&amp;rdquo; Click &amp;ldquo;Create a theme&amp;rdquo; Complete the form as follows:  Name: Any text Description: Any text Extends: Default Active: True / Checked   Click &amp;ldquo;Submit&amp;rdquo; Close current browser tab to return to the UI Builder browser tab Close and reopen the Experience Settings panel On &amp;ldquo;Branding and Theming&amp;rdquo; tab, select Theme created in step 6 Click &amp;ldquo;Save all changes&amp;rdquo;  </description>
    </item>
    
    <item>
      <title>UI Builder: Create UX App Configuration</title>
      <link>https://codecreative.io/notebook/ui-builder-create-ux-app-configuration/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-create-ux-app-configuration/</guid>
      <description>Purpose: How to create a UX App Configuration record in ServiceNow UI Builder. UX App Configuration records expose a UX Page Registry for use in the UI Builder.
 Open UX Page Registry record Click Magnifying Glass next to Admin Panel Select &amp;ldquo;UX App Config&amp;rdquo; Tablename Click Magnifying Glass next to Document Click &amp;ldquo;New&amp;rdquo; button on UX App Configurations list view Fill out the UX App Configurations form as follows:  Name: Any Text Active: True / Checked Landing Path: Any URL for page   Click &amp;ldquo;Submit&amp;rdquo; In Select Document modal, select &amp;ldquo;Ok&amp;rdquo; On UX Page Registry record, click &amp;ldquo;Update&amp;rdquo;  </description>
    </item>
    
    <item>
      <title>UI Builder: Create UX Page Registry</title>
      <link>https://codecreative.io/notebook/ui-builder-create-ux-page-registry/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-create-ux-page-registry/</guid>
      <description>Purpose: How to create a UX Page Registry record in ServiceNow UI Builder. The UX Page Registry record registers the URL, App Shell / page layout, and some other basic configs for a UI Builder Experience.
 Open Instance to &amp;ldquo;Hello&amp;rdquo; Page Click Open UI Builder Click &amp;ldquo;+ Create experience in Platform&amp;rdquo; button Verify UX Page Registry List View is now visible Click List View &amp;ldquo;New&amp;rdquo; Button Fill out the UX Page Registry Form as follows:  Title: Any Text App Shell UI: Portal App Shell URL Path: Any Text Active: True / Checked Auth routes: { &amp;quot;login&amp;quot;: &amp;quot;login&amp;quot;, &amp;quot;logout&amp;quot;: &amp;quot;logout&amp;quot; }   Click Submit  </description>
    </item>
    
    <item>
      <title>UI Builder: Input Data Binding</title>
      <link>https://codecreative.io/notebook/ui-builder-input-data-binding/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-input-data-binding/</guid>
      <description>Purpose: How to bind Client State Parameters to an Input Component in ServiceNow UI Builder.
 Open the UI Builder editor for an Experience Select the Input Component or add a new Input to the page if one does not already exist Click &amp;ldquo;Client State&amp;rdquo; icon in the lower left of the editor Click &amp;ldquo;Add&amp;rdquo; to create a new Client State Parameter Give it a name and select &amp;ldquo;String&amp;rdquo; for the type Select the Input Component In the Config tab, set &amp;ldquo;Value&amp;rdquo; to Data Select &amp;ldquo;@State.</description>
    </item>
    
    <item>
      <title>UI Builder: Start A New Portal Experience</title>
      <link>https://codecreative.io/notebook/ui-builder-start-a-new-portal-experience/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-start-a-new-portal-experience/</guid>
      <description>Purpose: How to create a new Portal Experience in ServiceNow UI Builder. Portal Experiences allow creating a custom UI using ServiceNow&amp;rsquo;s proprietary UI Web Component framework. These experiences are currently limited in their ability to support a mobile UI.
 Create a UX Page Registry record Create a UX App Configuration record Create a Homepage Create a header Create a theme Add a logo to the header Create a footer Add a logo to the footer Add a header menu Create additional pages  Special thanks to Ninja Bytes</description>
    </item>
    
    <item>
      <title>UI Builder: Theming Basics</title>
      <link>https://codecreative.io/notebook/ui-builder-theming-basics/</link>
      <pubDate>Wed, 14 Jul 2021 09:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/notebook/ui-builder-theming-basics/</guid>
      <description>Purpose: Description of how themes work in ServiceNow&amp;rsquo;s UI Builder Experiences
Setting Theme CSS Custom Properties UI Builder Experiences use CSS Custom Properties, a feature that is native to modern browsers. In UI Builder, these CSS Custom Property values are controlled by the UX Theme record&amp;rsquo;s JSON value where each property in the JSON is used to set the CSS Custom Property in the page.
Using a web inspector, CSS Custom Properties can be identified beinging with two dashes &amp;ldquo;&amp;ndash;*&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>ServiceNow Salary Influence Survey 2020</title>
      <link>https://codecreative.io/blog/service-now-salary-influence-survey-2020/</link>
      <pubDate>Tue, 08 Sep 2020 06:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/service-now-salary-influence-survey-2020/</guid>
      <description>What drives your salary in the ServiceNow industry? Is it the product of some cosmic coincidence? Or is there really a ServiceNow god watching over everything. You know, with a plan for it and stuff. I don&amp;rsquo;t know, man, but it keeps me up at night.
Seriously though. Red vs Blue reference aside, what characteristics influence your worth in the industry? Would you be worth more if you dove into ITBM instead of ITSM?</description>
    </item>
    
    <item>
      <title>The Future of ServiceNow UI: Seismic and the Now Design System</title>
      <link>https://codecreative.io/blog/the-future-of-servicenow-ui-seismic-and-the-now-design-system/</link>
      <pubDate>Mon, 03 Feb 2020 12:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/the-future-of-servicenow-ui-seismic-and-the-now-design-system/</guid>
      <description>The alternate working title of this article was Jace Was Right. In case you missed it over the weekend, I posted the video above to youtube covering the new UX system that powers ServiceNow Workspaces. And according to reliable information, this system will be eventually taking over most, if not all, of the web UI&amp;rsquo;s at ServiceNow including Service Portal. While there is a good chance that Service Portal will still be the primary choice for new end user interfaces for at least the next year, it&amp;rsquo;s worth exploring what this new UX system promises for the future.</description>
    </item>
    
    <item>
      <title>Is Service Portal Going Away?</title>
      <link>https://codecreative.io/blog/is-service-portal-going-away/</link>
      <pubDate>Thu, 17 Oct 2019 19:43:31 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/is-service-portal-going-away/</guid>
      <description>I really enjoyed Jace Benson&amp;rsquo;s latest post Service Portal is going the way of the mammoth and it&amp;rsquo;s ensuing Twitter conversation. But seeing as how I couldn&amp;rsquo;t answer a yes or no question in 280 characters or whatever it is these days, I certainly can&amp;rsquo;t tackle something of this magnitude with so few characters&amp;hellip; so here we are.
I hope Service Portal does go away
 Truth is, I&amp;rsquo;ve been thinking about this since earlier this summer when people first started asking me about it.</description>
    </item>
    
    <item>
      <title>Time Zones: Why You Punish Me</title>
      <link>https://codecreative.io/blog/time-zones-why-you-punish-me/</link>
      <pubDate>Tue, 06 Aug 2019 16:22:11 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/time-zones-why-you-punish-me/</guid>
      <description>Hootie captured my current frustrations about time best, I think I&amp;rsquo;m out of my mind / thinking about time. That reference is apparently about 24 years old&amp;hellip; enough time for Hootie to become Darius, cycle through R&amp;amp;B and Country before circling back to the Blowfish he left in the Cracked Rear View so long ago. But that&amp;rsquo;s not the time I&amp;rsquo;m talking about today.
No my friends, today it&amp;rsquo;s all about Time Zones in ServiceNow.</description>
    </item>
    
    <item>
      <title>(Recording) Configuration vs Customization: Which Is It?</title>
      <link>https://codecreative.io/blog/recording-configuration-vs-customization-which-is-it/</link>
      <pubDate>Wed, 26 Jun 2019 16:19:27 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/recording-configuration-vs-customization-which-is-it/</guid>
      <description>The following video is a recording of the Configuration vs Customization: Which Is It session that I presented at Knowledge 19. Special thanks to ServiceNow for providing the opportunity, the recording, and the permission to share it!
  </description>
    </item>
    
    <item>
      <title>Building a Modular Public Website on Service Portal</title>
      <link>https://codecreative.io/blog/building-a-modular-public-website-on-service-portal/</link>
      <pubDate>Wed, 26 Jun 2019 16:19:27 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/building-a-modular-public-website-on-service-portal/</guid>
      <description>The following video is a recording of the Building a Modular Public Website on Service Portal session that Thais Pulliam and I presented at Knowledge 19. Special thanks to ServiceNow for providing the opportunity, the recording, and the permission to share it!
  </description>
    </item>
    
    <item>
      <title>Configuration vs Customization: Which Is It?</title>
      <link>https://codecreative.io/blog/configuration-vs-customization-which-is-it/</link>
      <pubDate>Sat, 11 May 2019 16:10:09 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/configuration-vs-customization-which-is-it/</guid>
      <description>The following is a summary of the Configuration vs Customization: Which Is It? session that I presented at Knowledge 19.
 The Official Guidance (Slide 1) Intro
&amp;ldquo;We don&amp;rsquo;t want any customization.&amp;rdquo; It&amp;rsquo;s one of the first things I hear on almost any project. We all know and have been taught that we should avoid ServiceNow customization. The ideal is a purely configured instance. But by day 3 or 4, &amp;ldquo;maybe just this one customization&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Are Extension Points Worth It</title>
      <link>https://codecreative.io/blog/are-extension-points-worth-it/</link>
      <pubDate>Sat, 04 May 2019 16:57:50 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/are-extension-points-worth-it/</guid>
      <description>One of the features that most intrigued me in ServiceNow&amp;rsquo;s London release was Extension Points. Unfortunately, I wasn&amp;rsquo;t doing a whole lot of custom app development in London, so that intrigue was left on the bench. Recently, though, I&amp;rsquo;ve been doing a little more app development and starting exploring this new feature and finding myself at a cross-roads:
Do I switch to Extension Points or keep using my tried and true methods?</description>
    </item>
    
    <item>
      <title>Service Portal CSS Order of Precedence</title>
      <link>https://codecreative.io/blog/service-portal-css-order-of-precedence/</link>
      <pubDate>Sun, 21 Apr 2019 17:55:11 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/service-portal-css-order-of-precedence/</guid>
      <description>In my work on the Getting Started with Service Portal Guide, I decided to include some information on the order the CSS is processed but truth be told I wasn&amp;rsquo;t 100% certain on it myself. Naturally I hit up the ServiceNow Docs and came across the following image:
  Not Entirely Accurate Hierarchy of style application in the Service Portal   Using that as a basis, I began writing an article on the process.</description>
    </item>
    
    <item>
      <title>Is GlideRecord getValue the King of the String</title>
      <link>https://codecreative.io/blog/is-gliderecord-getvalue-the-king-of-the-string/</link>
      <pubDate>Sun, 31 Mar 2019 21:38:31 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/is-gliderecord-getvalue-the-king-of-the-string/</guid>
      <description>King of the String This article will be long, so here&amp;rsquo;s as quick a synopsis as I can muster. In order to determine if getValue is truly a best practice superior to other GlideRecord field string coercions, I collected and analyzed 278,738 data samples from ServiceNow records in the global scope of a Madrid Personal Developer Instance and compared the resulting types and values of 5 different methods:
 GlideRecord getValue (gr.</description>
    </item>
    
    <item>
      <title>Prepare Your Import Sets for Rollback</title>
      <link>https://codecreative.io/blog/prepare-your-import-sets-for-rollback/</link>
      <pubDate>Thu, 28 Feb 2019 08:42:07 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/prepare-your-import-sets-for-rollback/</guid>
      <description>Few things are worse than performing a bulk import of data into ServiceNow only to realize you got something horribly wrong in the Transform Map. With a well planned coalesce, this often won&amp;rsquo;t create an issue since you can just reimport and overwrite. But sometimes things don&amp;rsquo;t go as planned and we need the nuclear option. Up until this point, I am still unaware of any baseline method of rollback for import sets.</description>
    </item>
    
    <item>
      <title>ServiceNow Salary Survey - Nelson Frank</title>
      <link>https://codecreative.io/blog/servicenow-salary-survey-nelson-frank/</link>
      <pubDate>Mon, 11 Feb 2019 09:48:29 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/servicenow-salary-survey-nelson-frank/</guid>
      <description>This week I am excited to bring back Michael Green to discuss Nelson Frank&amp;rsquo;s first market trends and salary survey report. Whenever I talk to Michael or his team I end up discussing market trends, which locations are hot for ServiceNow, and how salaries are trending. I love sharing insights with the team at Nelson Frank, especially since most online tools have a hard time differentiating between the general IT market and the ServiceNow niche.</description>
    </item>
    
    <item>
      <title>Goodbye Mac, Hello Surface Book 2</title>
      <link>https://codecreative.io/blog/goodbye-mac-hello-surface-book-2/</link>
      <pubDate>Wed, 23 Jan 2019 07:20:12 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/goodbye-mac-hello-surface-book-2/</guid>
      <description>One month ago, I switched from a MacBook Pro with Touchbar to Surface Book 2. Short of a miracle, I won&amp;rsquo;t likely be going back any time soon.
Why switch? My wife and I have owned Apple devices exclusively since 2012 when she got her first MacBook Pro. Since then, we&amp;rsquo;ve at some point owned pretty much everything: MacBook Air, the new MacBook, MacBook Pro, MacBook Pro with Touchbar, 27&amp;quot; iMac, iPads, iPad Pros, iPhones, and heck even our router is the Airport Extreme.</description>
    </item>
    
    <item>
      <title>React Component in Service Portal</title>
      <link>https://codecreative.io/blog/react-component-in-service-portal/</link>
      <pubDate>Tue, 22 Jan 2019 14:16:59 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/react-component-in-service-portal/</guid>
      <description>So once again I am hearing rumors that React may be coming to Service Portal. I know many folks who were upset with the use of AngularJS in Service Portal and even with the general lack of modern frameworks built into ServiceNow. But what if the future was now (thanks to science)?
Well, today I spent some time at lunch exploring that possibility and it turns out React may have been able to work within Service Portal just fine all along.</description>
    </item>
    
    <item>
      <title>What&#39;s In Store For 2019</title>
      <link>https://codecreative.io/blog/whats-in-store-for-2019/</link>
      <pubDate>Fri, 18 Jan 2019 11:30:11 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/whats-in-store-for-2019/</guid>
      <description>This year has already kicked off strong and there is a lot that is in the works! Here&amp;rsquo;s a few things you can expect and a few things I am considering on CodeCreative in 2019.
Hugo, We Go! The first big change of 2019 for CodeCreative was a migration from SquareSpace to a Hugo static site. SquareSpace is great if you use their themes but unfortunately I used a custom theme for CodeCreative.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Revealing Module Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-revealing-module-pattern/</link>
      <pubDate>Thu, 17 Jan 2019 19:40:38 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-revealing-module-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The Revealing Module pattern can easily imitate either the Class Pattern or the Namespace Pattern with the added advantage of private state and private functions. This is most helpful in Scoped Applications where the app developer may prefer to keep implementation details hidden while exposing clear public interfaces. But it can also be used to help maintain clear API boundaries over time where traditional Javascript classes and objects would tend towards bloat.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Global Include Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-global-include-pattern/</link>
      <pubDate>Tue, 15 Jan 2019 19:23:43 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-global-include-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The Global Include pattern is simply a way of running a script file held in a Script Include. It is an odd, powerful, and potentially dangerous tool that allows for many different purposes from leveraging external javascript libraries to importing a collection of functions into the global scope, to monkey patching.
One of the most useful purposes is monkey patching which allows us to modify behaviors of existing Script Includes and even ServiceNow provided classes.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Namespace Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-namespace-pattern/</link>
      <pubDate>Tue, 15 Jan 2019 18:51:14 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-namespace-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The namespace pattern provides a simple mechanism for organizing reusable functions and objects. One of the challenging aspects of using alternative Script Include patterns is that they become harder to identify when used. For example, if I use the Function Pattern in a Business Rule it may be challenging for other developers to quickly identify that getMyTeamMembers() refers to a Script Include instead of a function defined in the script or a Global Business Rule.</description>
    </item>
    
    <item>
      <title>How to land your first ServiceNow role</title>
      <link>https://codecreative.io/blog/how-to-land-your-first-servicenow-role/</link>
      <pubDate>Tue, 11 Sep 2018 13:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-land-your-first-servicenow-role/</guid>
      <description>Breaking into a new sector or area of IT is never easy, but with so many opportunities available in ServiceNow perhaps it’s time you made a change. ServiceNow is the fastest-growing IT platform in the marketplace, with Gartner projecting its market share at double that of its nearest competitor in its latest research. Forbes also recently announced it as the world’s most innovative company. So if you’re looking for extra advice to kickstart your ServiceNow journey, here are some handy pointers to help you land your first role.</description>
    </item>
    
    <item>
      <title>Building Apps on ServiceNow: The App Publishers Checklist</title>
      <link>https://codecreative.io/blog/building-apps-on-servicenow-the-app-publishers-checklist/</link>
      <pubDate>Mon, 21 May 2018 17:13:08 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/building-apps-on-servicenow-the-app-publishers-checklist/</guid>
      <description>The following is a summary of the Building Apps on ServiceNow: The App Publishers Checklist session that I presented at Knowledge 18.
 Problem (Slide 2) The Hardest Mistakes to Overcome
During my time on the ServiceNow platform, I have had many opportunities to build a wide variety of applications. Some of my apps ended up on the ServiceNow Store like Intelligent Queue while others have been silent contributions to client applications.</description>
    </item>
    
    <item>
      <title>Making Service Portal Widgets Work Together</title>
      <link>https://codecreative.io/blog/making-service-portal-widgets-work-together/</link>
      <pubDate>Mon, 21 May 2018 17:12:38 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/making-service-portal-widgets-work-together/</guid>
      <description>The following is a summary of the Making Service Portal Widgets Work Together session that I presented at Knowledge 18.
 Problem (Slide 2) Widgets don&amp;rsquo;t play well with others
If you work with Service Portal widgets long enough, you will come across situations where you want to share data between multiple widgets. And inevitably, you will discover that sharing is not something that widgets are very good at.
(Slide 3) Widgets are isolated by design</description>
    </item>
    
    <item>
      <title>Fixing Scoped Apps: A Different Take</title>
      <link>https://codecreative.io/blog/fixing-scoped-apps-a-different-take/</link>
      <pubDate>Mon, 30 Apr 2018 00:46:19 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/fixing-scoped-apps-a-different-take/</guid>
      <description>Introduction &amp;ldquo;This record is in the Customer Service Application, but Global is the current application. To edit this record click here.&amp;rdquo; It&amp;rsquo;s the &amp;ldquo;your princess is in another castle&amp;rdquo; of ServiceNow application development and the target of much ire among developers and admins alike (myself included). The fact is, Cross-Scope development is not as great as it could be and one of Tim Woodruff&amp;rsquo;s latest articles inspired by this little pain point really got my wheels spinning on this issue.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Function Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-function-pattern/</link>
      <pubDate>Fri, 15 Sep 2017 15:30:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-function-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The function pattern is the simplest but also the most flexible interface design pattern for Script Includes. It is the foundation for the Revealing Module Pattern and can be used as a constructor or factory function for any of the other interface types. As a factory function, this pattern can provide a Scoped App with a flexible internal API that can easily evolve as complexity increases.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns: Class Pattern</title>
      <link>https://codecreative.io/blog/interface-design-patterns-class-pattern/</link>
      <pubDate>Thu, 07 Sep 2017 15:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-class-pattern/</guid>
      <description>Back to Interface Design Patterns for Script Includes
Introduction The first interface design pattern for Script Includes that we will take a closer look at is the Class Pattern. The primary use case for this interface pattern is to leverage inheritance&amp;hellip; or more properly prototypal inheritance. Prototypal inheritance will allow a Script Include to inherit behaviors from another. One example of this is Script Includes that inherit from AbstractAjaxProcessor to create Glide Ajax scripts but let&amp;rsquo;s look at a custom application example.</description>
    </item>
    
    <item>
      <title>Lodash style interface for GlideRecord</title>
      <link>https://codecreative.io/blog/lodash-style-interface-for-gliderecord/</link>
      <pubDate>Wed, 16 Aug 2017 19:56:57 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/lodash-style-interface-for-gliderecord/</guid>
      <description>Wow, I really left things hanging after the Interface Design Patterns post. The good news is that MapAnything&amp;rsquo;s next release will be amazing! And of course, I will circle back to interface design patterns. But for today, I want to take a look at the start of a library that has been a long time coming.
I love the lodash library. It&amp;rsquo;s great for working with arrays in a simplified manner.</description>
    </item>
    
    <item>
      <title>Interface Design Patterns for Script Includes</title>
      <link>https://codecreative.io/blog/interface-design-patterns-for-script-includes/</link>
      <pubDate>Thu, 01 Jun 2017 02:51:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/interface-design-patterns-for-script-includes/</guid>
      <description>Almost two thirds of the customer service agents used the default browser, never questioning whether a better one was available  The Originals by Adam Grant (2016)   It should go on record that I, sometimes irrationally and against my better judgement, question all conventions, policies, and established ways of doing things. In fact, when I read the above from The Originals a couple months ago, I responded by underlining the quote and hastily scribbling around the passage &amp;ldquo;Arg!</description>
    </item>
    
    <item>
      <title>Making the HighChart Widget Reusable</title>
      <link>https://codecreative.io/blog/making-the-highchart-widget-reusable/</link>
      <pubDate>Wed, 24 May 2017 15:38:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/making-the-highchart-widget-reusable/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal Configuring HighCharts in Service Portal Generate HighChart Data in a Widget Server Script Making the HighChart Widget Reusable (This Post)  Download the Widget
 Up until now, the HighChart Widget that we&amp;rsquo;ve been working on has remained&amp;hellip; well&amp;hellip; mostly unusable.</description>
    </item>
    
    <item>
      <title>Generate HighChart Data in a Widget Server Script</title>
      <link>https://codecreative.io/blog/generate-highchart-data-in-a-widget-server-script/</link>
      <pubDate>Wed, 17 May 2017 14:30:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/generate-highchart-data-in-a-widget-server-script/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal Configuring HighCharts in Service Portal Generate HighChart Data in a Widget Server Script (This Post) Making the HighChart Widget Reusable  Download the Widget
 Up until now, we&amp;rsquo;ve only dealt with custom charts using HighCharts with hardcoded data.</description>
    </item>
    
    <item>
      <title>Configuring HighCharts in Service Portal</title>
      <link>https://codecreative.io/blog/configuring-highcharts-in-service-portal/</link>
      <pubDate>Wed, 10 May 2017 21:37:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/configuring-highcharts-in-service-portal/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal Configuring HighCharts in Service Portal (This Post) Generate HighChart Data in a Widget Server Script Making the HighChart Widget Reusable  Download the Widget
 One of the greatest points of confusion from some of my previous articles on HighCharts stems from a lack of understanding of the HighCharts API and in particular the HighCharts configuration options object.</description>
    </item>
    
    <item>
      <title>Intro to HighCharts in Service Portal</title>
      <link>https://codecreative.io/blog/intro-to-highcharts-in-service-portal/</link>
      <pubDate>Wed, 03 May 2017 11:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/intro-to-highcharts-in-service-portal/</guid>
      <description>WARNING: The use of HighCharts in this way may require the purchase of an additional license from Highsoft. Use in production at your own risk.
Read the Whole Series:
 Intro to HighCharts in Service Portal (This Post) Configuring HighCharts in Service Portal Generate HighChart Data in a Widget Server Script Making the HighChart Widget Reusable  Download the Widget
 About 2 years ago, I demonstrated how to build custom charts using HighCharts with a UI Page and kicked off what would eventually become Code Creative.</description>
    </item>
    
    <item>
      <title>Eliminate Unnecessary Queries With This Simple Check</title>
      <link>https://codecreative.io/blog/eliminate-unnecessary-queries-with-this-simple-check/</link>
      <pubDate>Wed, 26 Apr 2017 23:51:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/eliminate-unnecessary-queries-with-this-simple-check/</guid>
      <description>When I first write a script include to manipulate a GlideRecord, I usually script it to accept a sys_id or other query criteria as a parameter. Its the obvious first step, the GlideRecord has to be retrieved to manipulate it after all. Take this guy for example:
var Test = Class.create(); Test.prototype = { initialize: function() { }, doSomethingAwesome: function(id) { var gr = new GlideRecord(&amp;#39;incident&amp;#39;); if (gr.get()) { // Something awesome gets done here  } }, type: &amp;#39;Test&amp;#39; }; The more I use the script, though, the more likely I am to run into a scenario where I already have the GlideRecord queried from another script.</description>
    </item>
    
    <item>
      <title>Let&#39;s Grab a Drink at Knowledge 17</title>
      <link>https://codecreative.io/blog/lets-grab-a-drink-at-knowledge-17/</link>
      <pubDate>Fri, 14 Apr 2017 16:35:02 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/lets-grab-a-drink-at-knowledge-17/</guid>
      <description>Whether you want to ask me a question in person, discuss Service Portal and custom applications, learn more about my work at MapAnything, discuss a business opportunity, or just chat and enjoy some pleasant company let me know. It&amp;rsquo;s better than hoping we haphazardly stumble on one another. If you&amp;rsquo;re interested, fill out the form below so I can work out a time to meet with you.
Also don&amp;rsquo;t forget to swing by the MapAnything booth!</description>
    </item>
    
    <item>
      <title>A Layman&#39;s Guide to Nested GlideRecords</title>
      <link>https://codecreative.io/blog/a-laymans-guide-to-nested-gliderecords/</link>
      <pubDate>Thu, 13 Apr 2017 15:30:01 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/a-laymans-guide-to-nested-gliderecords/</guid>
      <description>My previous articles on the Nested GlideRecord issue were far more technical than I usually try to achieve. After all, if I can&amp;rsquo;t explain it simply enough then I probably don&amp;rsquo;t understand it well myself. With that in mind, I would like to revisit Nested GlideRecords, how they cause performance problems, and why database indexing alone isn&amp;rsquo;t the best solution&amp;hellip; this time with a little more simplicity.
And a parable!</description>
    </item>
    
    <item>
      <title>Avoid the Style Tag in Service Portal Widgets</title>
      <link>https://codecreative.io/blog/avoid-the-style-tag-in-service-portal-widgets/</link>
      <pubDate>Wed, 12 Apr 2017 14:41:36 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/avoid-the-style-tag-in-service-portal-widgets/</guid>
      <description>Warning: This article is an example of what not to do. Avoid using these practices in your ServiceNow instance.
 Previously, we built a widget with configurable CSS styles and I briefly mentioned that using the &amp;lt;style&amp;gt; tag wasn&amp;rsquo;t a great idea. I want to revisit that thought and explore some of the problems that you might encounter when using the &amp;lt;style&amp;gt; tag in a Service Portal Widget. I will use the colored square widget again to demonstrate.</description>
    </item>
    
    <item>
      <title>Intro to Configurable Styles for Service Portal Widgets</title>
      <link>https://codecreative.io/blog/intro-to-configurable-styles-for-service-portal-widgets/</link>
      <pubDate>Fri, 07 Apr 2017 13:08:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/intro-to-configurable-styles-for-service-portal-widgets/</guid>
      <description>Note: This article assumes a basic working knowledge of Service Portal Designer, Service Portal Widget development, and the Widget Editor.
In my Service Portal CSS Best Practices post, I mentioned that as widget developers we should avoid hardcoding colors and use CSS variables to allow overriding default styles. Sometimes we want to take this idea to the next level by allowing portal admins to configure the look and feel of widgets without touching code at all.</description>
    </item>
    
    <item>
      <title>6 Best Practices for Service Portal CSS</title>
      <link>https://codecreative.io/blog/6-best-practices-for-service-portal-css/</link>
      <pubDate>Wed, 22 Mar 2017 17:30:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/6-best-practices-for-service-portal-css/</guid>
      <description>When developing Service Portal styles for either the Theme or the Widgets, there is more to think about than there used to be in CMS. Service Portal offers greater modularity to protect our Widgets from our Themes and vice versa. Below are 6 best practices (they&amp;rsquo;re more what you&amp;rsquo;d call guidelines than actual rules) to follow when coding the CSS for your Service Portal to keep your CSS maintainable and flexible.</description>
    </item>
    
    <item>
      <title>GlideRecord Full Text Search Explained</title>
      <link>https://codecreative.io/blog/gliderecord-full-text-search-explained/</link>
      <pubDate>Tue, 14 Mar 2017 21:36:29 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/gliderecord-full-text-search-explained/</guid>
      <description>After posting last week&amp;rsquo;s GlideRecord Full Text Search article using 123TEXTQUERY321, Jeff Pierce reached out and reminded me of a better way of doing it using IR_AND_OR_QUERY. So special thanks to him for helping to clear this up!
I have since updated my previous article to this approach but I wanted to take a moment to dive into the multiple methods of Full Text Search and their differences.
IR_AND_QUERY   IR_AND_QUERY Results   Behind the scenes, the method previously demonstrated (123TEXTQUERY321) behaves in the same way as using IR_AND_QUERY.</description>
    </item>
    
    <item>
      <title>How To Do Full Text Search With GlideRecord</title>
      <link>https://codecreative.io/blog/how-to-do-full-text-search-with-gliderecord/</link>
      <pubDate>Wed, 08 Mar 2017 20:53:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-do-full-text-search-with-gliderecord/</guid>
      <description>UPDATE: After posting this article, Jeff Pierce reminded me of a better way than the original 123TEXTQUERY321 approach. I have since updated the scripts and article here and provided a deeper explanation in another article.
 When looking at the form filters in ServiceNow, I think all admins and developers reach a point where we start to wonder &amp;ldquo;How do I search Keywords in my scripts?&amp;rdquo; After all, that full text search using &amp;ldquo;for text&amp;rdquo; or the &amp;ldquo;Keywords&amp;rdquo; filter is so tantalizing for any custom CMS / Service Portal search feature.</description>
    </item>
    
    <item>
      <title>GlideAjax Troubleshooting Guide</title>
      <link>https://codecreative.io/blog/glideajax-troubleshooting-guide/</link>
      <pubDate>Thu, 02 Mar 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/glideajax-troubleshooting-guide/</guid>
      <description>After my Demystifying GlideAjax infographic I always meant to go back and write a GlideAjax troubleshooting guide. Both troubleshooting my own scripts and helping folks on the ServiceNow Community, I run into the same mistakes over and over and over again. And in spite of making the same mistakes, and eventually stumbling across the same solutions, I&amp;rsquo;ve (shamefully) never quite refined my troubleshooting process on this one. I&amp;rsquo;m pretty sure if I forget sysparm_name in my Client Script again, ServiceNow is going to send people to my door to reclaim my ServiceNow certificates until I go through remediation training.</description>
    </item>
    
    <item>
      <title>3 Ways CSS Widget Scopes Affect Service Portal CSS</title>
      <link>https://codecreative.io/blog/3-ways-css-widget-scopes-affect-service-portal-css/</link>
      <pubDate>Wed, 22 Feb 2017 18:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/3-ways-css-widget-scopes-affect-service-portal-css/</guid>
      <description>Previously, we looked at CSS Widget Scopes in Service Portal. This change in how CSS is applied in Service Portal has a few implications for developers that we need to keep in mind when developing widgets and themes.
1. Widget styles are protected from other widget styles This one should go without saying from the previous article but a widget&amp;rsquo;s CSS will only affect widget instances of that type. Each widget has its own prefixed CSS identifier which appears to be the letter &amp;ldquo;v&amp;rdquo; followed by the sys_id of the widget record, in case you are wondering.</description>
    </item>
    
    <item>
      <title>What are CSS Widget Scopes in Service Portal?</title>
      <link>https://codecreative.io/blog/what-are-css-widget-scopes-in-service-portal/</link>
      <pubDate>Wed, 15 Feb 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/what-are-css-widget-scopes-in-service-portal/</guid>
      <description>Scoped CSS Screenshot from CanIUse.com   Service Portal as a Content Management System has introduced something that now seems like an obvious oversight in all other CMS applications. In fact, its such a obvious, painful oversight that countless others have attempted some sort of solution. CSS Preprocessors, the HTML5 spec, and the recent CSS and JS specs all introduced scoped concepts such as a scoped attribute, scope pseudo selector, and scoping capability with Shadow DOM most of which was promptly ignored by browsers and removed from spec.</description>
    </item>
    
    <item>
      <title>Istanbul CMS iFrames Are Missing Theme CSS</title>
      <link>https://codecreative.io/blog/istanbul-cms-iframes-are-missing-theme-css/</link>
      <pubDate>Thu, 09 Feb 2017 01:08:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/istanbul-cms-iframes-are-missing-theme-css/</guid>
      <description>UPDATE (04/09/2017): This issue appears to be fixed in Istanbul Patch 3
 If your organization is using CMS and you are considering upgrading to Istanbul, be on the lookout for a potential issue. Theme CSS styles may not be applied to iFrame content in the CMS for some instances after upgrading to Istanbul. ServiceNow is already looking into the issue so hopefully we will have a resolution soon but I know of a few instances out there that might find this to be a deal breaker for an upgrade so I thought it best to advise the Community.</description>
    </item>
    
    <item>
      <title>Flexbox Layouts in Service Portal (Video)</title>
      <link>https://codecreative.io/blog/flexbox-layouts-in-service-portal/</link>
      <pubDate>Wed, 08 Feb 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/flexbox-layouts-in-service-portal/</guid>
      <description>One of the lesser known features of Service Portal is that you can entirely ditch the Bootstrap grid layout. Technically, this opens up the ability to use Flexbox based layouts. But as some in the Community have found out first hand, using Flexbox as a Bootstrap alternative in Service Portal is not quite as straightforward as it seems.
Most of the &amp;ldquo;problem&amp;rdquo; rests in Flexbox&amp;rsquo;s simplicity. Using only a simple containing div around a set of item divs, Flexbox can achieve many layouts via CSS.</description>
    </item>
    
    <item>
      <title>3 Strategies To Fix Nested GlideRecords</title>
      <link>https://codecreative.io/blog/3-strategies-to-fix-nested-gliderecords/</link>
      <pubDate>Wed, 01 Feb 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/3-strategies-to-fix-nested-gliderecords/</guid>
      <description>Previously, I talked about Nested GlideRecords in scripts and the performance impact they can have on your applications. Being able to identify these miscreants is great but we really need to get them out of any mission critical scripts where they are slowing down response times. Here are a couple strategies to kick those GlideRecords out of the nest and to teach them to fly.
1. Array Flattened GlideRecord Normally, in a Nested GlideRecord, you run a GlideRecord query for each record in the result of the first GlideRecord.</description>
    </item>
    
    <item>
      <title>4 Things to Do Before Building a Service Portal</title>
      <link>https://codecreative.io/blog/4-things-to-do-before-building-a-service-portal/</link>
      <pubDate>Wed, 25 Jan 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/4-things-to-do-before-building-a-service-portal/</guid>
      <description>But at the end of the day, if you have a form with 100 fields that are all mandatory to be filled out before a Catalog Item can be submitted, that’s not a [Service Portal] issue.  Matt Metten   This. Read that. All of that. YES! (&amp;ldquo;I love quick time harch.&amp;quot;) I read that, I clicked endorse, then I wrote this. So go read that.
I have spent quite a bit of my time evangelizing Service Portal as well.</description>
    </item>
    
    <item>
      <title>Nested GlideRecords Are Killing Your App Performance</title>
      <link>https://codecreative.io/blog/nested-gliderecords-are-killing-your-app-performance/</link>
      <pubDate>Wed, 18 Jan 2017 17:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/nested-gliderecords-are-killing-your-app-performance/</guid>
      <description>In a troubleshooting conversation with a couple of my teammates, I realized that I take GlideRecord (and its partner GlideAggregate) for granted. When you make that simple gr.query() call, what happens? What SQL does it run? What does the real underlying table structure look like? Are there indexes? Are additional queries run when you dot walk? Does any of this hit a cache? How does the cache work? Where are the optimizations under the hood?</description>
    </item>
    
    <item>
      <title>Share knowledge, don’t worry about the competition</title>
      <link>https://codecreative.io/blog/share-knowledge-dont-worry-about-the-competition/</link>
      <pubDate>Thu, 23 Jun 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/share-knowledge-dont-worry-about-the-competition/</guid>
      <description>I first thought about sharing what I know back in 2012 and even went so far as to bring it up in an interview with my soon to be employer. “So how do you feel about me sharing all of your best kept secrets” might not make the top 10 list of questions to ask your interviewer but surprisingly with a little tweaking it didn’t seem to do me any harm.</description>
    </item>
    
    <item>
      <title>What’s in a Service Portal on ServiceNow?</title>
      <link>https://codecreative.io/blog/whats-in-a-service-portal-on-servicenow/</link>
      <pubDate>Wed, 08 Jun 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/whats-in-a-service-portal-on-servicenow/</guid>
      <description>ServiceNow Service Portal Designer   Hopefully my last post on Service Portal helped you to figure out whether you or your client are ready to take advantage of this new powerful tool. Before we actually dig in and start coding and building portals though, it will help to understand a bit about the components that make up the Service Portal and what they actually do.
Don’t let the Service Portal Configuration link in the application fool you.</description>
    </item>
    
    <item>
      <title>4 Reasons You’re Not Ready For Service Portal</title>
      <link>https://codecreative.io/blog/4-reasons-youre-not-ready-for-service-portal/</link>
      <pubDate>Wed, 25 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/4-reasons-youre-not-ready-for-service-portal/</guid>
      <description>To IE or not to IE, that is the question   The most common question I received at Knowledge 16 was “Should we stick with CMS or move forward with Service Portal.” As a developer I want to tell everyone to move to Service Portal if for no other reason than so I never have to touch an iframe ever again. Aside from that, Service Portal is truly a much more refined delivery tool for portals and I can’t recommend it highly enough.</description>
    </item>
    
    <item>
      <title>Service Portal: First Impressions</title>
      <link>https://codecreative.io/blog/service-portal-first-impressions/</link>
      <pubDate>Fri, 13 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/service-portal-first-impressions/</guid>
      <description>ServiceNow Service Portal   So for the last week and a half I have been spending some time exploring the new Service Portal on the ServiceNow developer site. In fact, I may have been spending a bit too much time on it as my In House Designer expressed some displeasure:
  Sarah&#39;s Tweet   But the time spent has been fruitful and I have learned quite a bit about this new tool.</description>
    </item>
    
    <item>
      <title>ServiceNow Engagement: The Path Forward</title>
      <link>https://codecreative.io/blog/servicenow-engagement-the-path-forward/</link>
      <pubDate>Fri, 06 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/servicenow-engagement-the-path-forward/</guid>
      <description>&amp;ldquo;No application is safe. I’m telling you, name any application we use and I could rebuild it better on this platform. This could replace SAP.&amp;quot;
John didn’t have to respond. His “you’re crazier than a shithouse rat” look was well practiced by this point in our friendship. In hindsight, tilting at SAP may have been carrying it a little far but hey, where would we be if we never looked at things and thought of what they might be.</description>
    </item>
    
    <item>
      <title>ECMAScript 5 in ServiceNow Helsinki!</title>
      <link>https://codecreative.io/blog/ecmascript-5-in-servicenow-helsinki/</link>
      <pubDate>Thu, 05 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/ecmascript-5-in-servicenow-helsinki/</guid>
      <description>Knowledge 16 ECMAScript Session   Ok, so it may not be official yet and I know this is a weird thing to get worked up about. Besides, ECMAScript 5 is so 2011, you say. Weren’t we still talking about DVD’s in 2011? Shouldn’t we be talking about ES 6 / ECMAScript 2015? Aren’t we already using polyfills for that?
I hear you. I’m with you. But let’s not forget that a lot of code runs on top of ServiceNow’s modified Rhino engine, including yours and mine.</description>
    </item>
    
    <item>
      <title>Where to Start with Knowledge 16</title>
      <link>https://codecreative.io/blog/where-to-start-with-knowledge-16/</link>
      <pubDate>Wed, 04 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/where-to-start-with-knowledge-16/</guid>
      <description>Preview for Developers The Knowledge Conference is the ServiceNow New Year. It is a time for reminiscing on the past year’s projects, setting goals for the next conference year, meeting new friends, having fun with old friends, and of course drinking enough to not remember half of it.
This year will be my 4th Knowledge Conference, missing only K13 on account of the evils of the number 13 (not at all because I was the rookie on the team and drew the short straw).</description>
    </item>
    
    <item>
      <title>How to Fix CMS iFrame Resizing (Video)</title>
      <link>https://codecreative.io/blog/how-to-fix-cms-iframe-resizing/</link>
      <pubDate>Tue, 03 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-fix-cms-iframe-resizing/</guid>
      <description>Update (03/21/2017): This script currently only works if the Frame Name on your iFrame is gsft_main. Thanks to Anil Varanasi for catching this!
  Everyone has that one thing that makes them hate their job. And I don’t mean I’m just gonna stop going I hate my job. I mean I could set the building on fire I hate my job. For me, that thing is iFrames. ServiceNow has given them a lot of love over the years but as the dubbed Portal Guy of my team I would like to see them in an episode of Will It Blend.</description>
    </item>
    
    <item>
      <title>Perfectionism is Procrastination</title>
      <link>https://codecreative.io/blog/perfectionism-is-procrastination/</link>
      <pubDate>Mon, 02 May 2016 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/perfectionism-is-procrastination/</guid>
      <description>Breaking the connection to relaunch Code Creative Nine months, thats how long it takes the female human body to create a new life… conveniently, it’s also how long it has taken me to create absolutely nothing. It’s not that I stopped trying to create or because I was slacking off, quite the contrary. I spent my nights and weekends learning, working on content, writing code, designing graphics, trying to bring my passion project to life.</description>
    </item>
    
    <item>
      <title>Adding Doctype to a UI Page</title>
      <link>https://codecreative.io/blog/adding-doctype-to-a-ui-page/</link>
      <pubDate>Mon, 15 Jun 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/adding-doctype-to-a-ui-page/</guid>
      <description>Today, I am going to share a trick I learned to add a doctype to a UI Page based off of will.leingang&amp;rsquo;s article Making a UI Page without using the framework page template. A page&amp;rsquo;s doctype usually doesn&amp;rsquo;t seem to make a huge difference in output but occasionally, certain scripts and html/css tricks require a specific doctype. In my case, I needed the standard HTML5 doctype.
What Not To Do As my first attempt, I foolishly tried this for the UI Page:</description>
    </item>
    
    <item>
      <title>How To Make Custom Pivot Tables in ServiceNow (Video)</title>
      <link>https://codecreative.io/blog/how-to-make-custom-pivot-tables/</link>
      <pubDate>Mon, 01 Jun 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-make-custom-pivot-tables/</guid>
      <description>Well, it seems that pivot tables are just a little bit popular in community and while sometimes native pivot tables will suffice, there are times when custom is the only route to take. Sadly, these pivot table questions have all too often gone unanswered or answered with the dreaded &amp;ldquo;You can&amp;rsquo;t do that out of box&amp;rdquo;. Well no more. The technique covered in Code Creative Episode 3 can be used to build nearly any pivot table imaginable!</description>
    </item>
    
    <item>
      <title>How to get more out of ServiceNow Pivot Tables (Video)</title>
      <link>https://codecreative.io/blog/how-to-get-more-out-of-servicenow-pivot-tables/</link>
      <pubDate>Mon, 18 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-get-more-out-of-servicenow-pivot-tables/</guid>
      <description>So its time for the release of Code Creative Episode 2! I had a lot of fantastic followup questions from How to Build Custom Charts and Reports but the one that kept jumping out was &amp;ldquo;How do I do a Pivot Table?&amp;rdquo; In fact, this was a common question even before I released Episode 1 and your wish is my command. Sadly, though, High Charts does not offer a Pivot Table in ServiceNow.</description>
    </item>
    
    <item>
      <title>Demystifying GlideAjax (Infographic)</title>
      <link>https://codecreative.io/blog/demystifying-glideajax/</link>
      <pubDate>Sat, 09 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/demystifying-glideajax/</guid>
      <description>Let&amp;rsquo;s face it, unless you&amp;rsquo;re a web developer who has been on the AJAX bandwagon for a while, GlideAjax can be downright confusing. At best, it is often a mystical voodoo incantation, sure you can say the words but your just one &amp;ldquo;Klaatu verata necktie&amp;rdquo; away from unleashing a horde of undead code that will leave you wanting to unload a fist full of boomstick on your computer. With that in mind, I have put together the infographic below to illuminate your path, equip you for the debugging battles ahead, and return you to your time.</description>
    </item>
    
    <item>
      <title>How to Build Custom ServiceNow Charts and Reports (Video)</title>
      <link>https://codecreative.io/blog/how-to-build-custom-charts-and-reports/</link>
      <pubDate>Mon, 04 May 2015 16:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/blog/how-to-build-custom-charts-and-reports/</guid>
      <description>The ServiceNow Community can be a tough place to communicate without winding up with a wall of intimidating technical text. Add to that the gaps in technical knowledge and understanding as well as differences in jargon and we often end up with walls of text and frequent churn in the comments in order to arrive at a solution. Thankfully, the Community offers some great rich media features like videos!</description>
    </item>
    
    <item>
      <title>Empowering People with ServiceNow</title>
      <link>https://codecreative.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/about/</guid>
      <description>About CodeCreative Vision A better life through opportunity in the tech industry for all who desire it
Mission Empowering people to develop creative business solutions on ServiceNow by making knowledge accessible, inspiring, and relatable
Values  Serve first Love people Be transparent Value learning over knowing Inspire others to the same  About Travis Hi, I&amp;rsquo;m Travis Toulson and I started this whole CodeCreative thing. When I was transitioning from working in maintenance and production to IT, I faced a lot of challenges breaking in.</description>
    </item>
    
    <item>
      <title>ServiceNow Salary Influence Survey 2021</title>
      <link>https://codecreative.io/survey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://codecreative.io/survey/</guid>
      <description>(function() {var script = document.createElement(&#39;script&#39;); script.src = &#34;https://paperform.co/__embed.min.js&#34;; document.body.appendChild(script); })()</description>
    </item>
    
  </channel>
</rss>
